{"version":3,"sources":["assets/svgs/10c.svg","assets/svgs/10d.svg","assets/svgs/10h.svg","assets/svgs/10s.svg","assets/svgs/1c.svg","assets/svgs/1d.svg","assets/svgs/1h.svg","assets/svgs/1s.svg","assets/svgs/1s2.svg","assets/svgs/jc.svg","assets/svgs/jd.svg","assets/svgs/jh.svg","assets/svgs/js.svg","assets/svgs/qc.svg","assets/svgs/qd.svg","assets/svgs/qh.svg","assets/svgs/qs.svg","assets/svgs/kc.svg","assets/svgs/kd.svg","assets/svgs/kh.svg","assets/svgs/ks.svg","assets/svgs/b.svg","assets/icon.svg","assets/svgs sync /^/1.*/.svg$","assets/svgs sync /^/j.*/.svg$","assets/svgs sync /^/q.*/.svg$","assets/svgs sync /^/k.*/.svg$","assets/svgs sync /^/.*/.svg$","assets/svgs/2c.svg","assets/svgs/2d.svg","assets/svgs/2h.svg","assets/svgs/2s.svg","assets/svgs/3c.svg","assets/svgs/3d.svg","assets/svgs/3h.svg","assets/svgs/3s.svg","assets/svgs/4c.svg","assets/svgs/4d.svg","assets/svgs/4h.svg","assets/svgs/4s.svg","assets/svgs/5c.svg","assets/svgs/5d.svg","assets/svgs/5h.svg","assets/svgs/5s.svg","assets/svgs/6c.svg","assets/svgs/6d.svg","assets/svgs/6h.svg","assets/svgs/6s.svg","assets/svgs/7c.svg","assets/svgs/7d.svg","assets/svgs/7h.svg","assets/svgs/7s.svg","assets/svgs/8c.svg","assets/svgs/8d.svg","assets/svgs/8h.svg","assets/svgs/8s.svg","assets/svgs/9c.svg","assets/svgs/9d.svg","assets/svgs/9h.svg","assets/svgs/9s.svg","pages/Lobby.js","LobbyAPI.js","config.js","pages/Home.js","code/game/Setup.js","assets/cards.js","code/board/Hand.js","code/board/PlayCardOptions.js","code/board/CounteringOptions.js","code/board/Field.js","code/board/SpecialField.js","code/board/Graveyard.js","code/board/TurnOptions.js","code/board/TurnInfo.js","code/board/ChoosingPopup.js","code/board/Board.js","code/game/EffectMoves.js","code/game/Game.js","code/game/ActionMoves.js","code/game/ScuttleMoves.js","code/game/Victory.js","pages/Room.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Lobby","props","Container","className","src","icon","alt","children","window","location","origin","SERVER_URL","protocol","hostname","LobbyAPI","this","api","ky","create","prefixUrl","numPlayers","post","json","res","gameID","console","log","roomID","name","playerID","playerName","playerCredentials","credentials","nextRoomID","get","players","Home","history","useState","room","setRoom","jName","setJName","cName","setCName","errMsg","setErrMsg","useEffect","timer","state","invalidRoom","setTimeout","replace","clearTimeout","handleKeyDown","text","key","length","substring","preventDefault","saveInfo","localStorage","setItem","joinRoom","a","getPlayers","filter","player","indexOf","find","then","push","document","getElementById","value","Row","Col","type","maxLength","spellCheck","autoComplete","onKeyDown","onChange","target","onPaste","Button","size","variant","disabled","onClick","createRoom","createDeck","suits","values","deck","i","x","card","Value","Suit","Point","parseInt","shuffle","arr","j","Math","floor","random","CardImages","list","require","charAt","toLowerCase","createImages","Hand","hand","cells","style","marginBottom","img","Image","thumbnail","inActionStage","toggleSelectedCard","md","React","Component","PlayCardOptions","playerIDOpponent","fields","specialFields","graveyard","jacks","selectedCard","special","disabledValue","disabledScuttle","jackInOpponentField","some","numQueensInOpponentSpecialField","disabledEffect","Fragment","playCardValue","playCardScuttle","playCardEffect","CounteringOptions","accept","counter","has2","Field","targetCard","inPopup","inChoosingScuttleStage","isOpponentField","chooseScuttleTarget","inChoosingEffectStage","chooseEffectTarget","isPlayerField","targetable","field","textAlign","SpecialField","isOpponentSpecialField","isPlayerSpecialField","specialField","Graveyard","TurnOptions","drawCard","endTurn","TurnInfo","currentPlayer","ChoosingPopup","scuttle","opponentField","effect2","opponentSpecialField","effect7","idx","effect9","playerField","effectJ","effect3","Board","setState","toggleGraveyard","showGraveyard","moves","targetField","String","hands","G","ctx","activePlayers","inCounteringStage","gameover","winner","Jumbotron","counterChain","playerSpecialField","playerAction","findIndex","splice","events","setActivePlayers","0","1","effectCountered","current_player","playOrder","playOrderPos","opponent_player","current_player_hand","opponent_player_hand","current_player_field","opponent_player_field","current_player_special_field","opponent_player_special_field","pop","jacklist","discarded","owner","remove","player_hand_length","doEffect","others","Scuttle","setup","current","next","drawHands","setFields","setSpecialFields","initializeGame","turn","onBegin","onEnd","cleanupCounterChain","stages","idle","action","countering","playerCounter","twoIndex","choosingScuttle","current_hand","opponent_field","current_card","target_card","curr","targ","remove1","y","remove2","choosingEffect","idx_jack","remove_jack","target_idx","found_card","jack","doEffectTarget","endIf","reduce","b","isVictory","opponent","opponentHand","every","isDraw","draw","GameClient","Client","game","board","debug","multiplayer","SocketIO","server","Room","useParams","setPlayers","show","setShow","interval","setInterval","clearInterval","getItem","readOnly","select","execCommand","focus","leaveRoom","App","useHistory","exact","path","to","ReactDOM","render","StrictMode"],"mappings":"0KAAAA,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,+BCA3CD,EAAOC,QAAU,IAA0B,kC,8ECA3C,IAAIC,EAAM,CACT,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,YAAa,IAId,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,gBC9BpB,IAAIH,EAAM,CACT,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,IAIb,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,gBCzBpB,IAAIH,EAAM,CACT,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,IAIb,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,gBCzBpB,IAAIH,EAAM,CACT,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,IAIb,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,gBCzBpB,IAAIH,EAAM,CACT,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,YAAa,GACb,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,UAAW,GACX,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,IAIb,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,gBC3EpBL,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,kOCoB5Bc,EAbD,SAACC,GACX,OACI,kBAACC,EAAA,EAAD,CAAWC,UAAU,cACjB,sCACW,yBAAKb,GAAG,OAAOc,IAAKC,IAAMC,IAAI,UAEzC,6BACCL,EAAMM,SACP,gF,wBCZ2BC,OAAOC,SAAtCC,E,EAAAA,OACFC,G,EADUC,S,EAAUC,SACUH,GAGvBI,EAAb,WAEE,aAAe,oBACbC,KAAKC,IAAMC,IAAGC,OAAO,CACnBC,UAAU,GAAD,OAAKR,EAAL,kBCXU,aDOzB,gGASmBS,GATnB,gGAWwBL,KAAKC,IAAIK,KAAK,SAAU,CAAEC,KAAM,CAAEF,WAAYA,KAAgBE,OAXtF,cAWYC,EAXZ,yBAYaA,EAAIC,QAZjB,gCAcMC,QAAQC,IAAI,yBAAZ,MAdN,wLAmBiBC,EAAQrC,EAAIsC,GAnB7B,kGAqBwBb,KAAKC,IAAIK,KAAKM,EAAS,QAAS,CAAEL,KAAM,CAAEO,SAAUvC,EAAIwC,WAAYF,KAAUN,OArBtG,cAqBYC,EArBZ,OAsBcQ,EAAsBR,EAAtBQ,kBAtBd,kBAuBaA,GAvBb,gCAyBMN,QAAQC,IAAI,uBAAZ,MAzBN,6LA8BkBC,EAAQrC,EAAIyC,GA9B9B,0FAgCYhB,KAAKC,IAAIK,KAAKM,EAAS,SAAU,CAAEL,KAAM,CAAEO,SAAUvC,EAAI0C,YAAaD,KAAuBT,OAhCzG,sDAkCMG,QAAQC,IAAI,wBAAZ,MAlCN,4LAuCkBC,EAAQrC,EAAIyC,GAvC9B,gGAyCwBhB,KAAKC,IACpBK,KAAKM,EAAS,aAAc,CAAEL,KAAM,CAAEO,SAAUvC,EAAI0C,YAAaD,KACjET,OA3CT,cAyCYC,EAzCZ,yBA4CaA,EAAIU,YA5CjB,gCA8CMR,QAAQC,IAAI,wBAAZ,MA9CN,8LAmDmBC,GAnDnB,uFAoDsBZ,KAAKC,IAAIkB,IAAIP,GAAQL,OApD3C,cAoDUC,EApDV,yBAqDWA,EAAIY,SArDf,wQA4DsBpB,KAAKC,IAAIkB,IAAI,IAAIZ,OA5DvC,cA4DUC,EA5DV,yBA6DWA,GA7DX,6G,2BEDMP,EAAM,IAAIF,EAoKDsB,EAlKF,SAACnC,GAAW,IACboC,EAAYpC,EAAZoC,QADY,EAKIC,mBAAS,IALb,mBAKbC,EALa,KAKPC,EALO,OAMMF,mBAAS,IANf,mBAMbG,EANa,KAMNC,EANM,OAUMJ,mBAAS,IAVf,mBAUbK,EAVa,KAUNC,EAVM,OAYQN,mBAAS,IAZjB,mBAYbO,EAZa,KAYLC,EAZK,KAepBC,qBAAU,WACN,IAAIC,EASJ,OARIX,EAAQ5B,SAASwC,OAASZ,EAAQ5B,SAASwC,MAAMC,cACjDJ,EAAU,wBAEVE,EAAQG,YAAW,WACfL,EAAU,IACVT,EAAQe,YACT,MAEA,WACHC,aAAaL,MAElB,CAACX,IAGJ,IAAMiB,EAAgB,SAAC5D,EAAG6D,GACR,MAAV7D,EAAE8D,MACED,GAEoB,IAAhBA,EAAKE,QAC4C,MAAjDF,EAAKG,UAAUH,EAAKE,OAAS,EAAGF,EAAKE,SAKzC/D,EAAEiE,mBAMRC,EAAW,SAAChC,EAAMtC,EAAI0C,GACxB6B,aAAaC,QAAQ,OAAQlC,GAC7BiC,aAAaC,QAAQ,KAAMxE,GAC3BuE,aAAaC,QAAQ,cAAe9B,IAGlC+B,EAAQ,uCAAG,WAAOpC,EAAQC,GAAf,iBAAAoC,EAAA,+EAEahD,EAAIiD,WAAWtC,GAF5B,OAEHQ,EAFG,QAOmB,IAHxBA,EACK+B,QAAO,SAACC,GAAD,OAAYA,EAAOvC,QAC1BzC,KAAI,SAACgF,GAAD,OAAYA,EAAOvC,QACvBwC,QAAQxC,IAGPtC,EAAK6C,EAAQkC,MAAK,SAACF,GAAD,OAAaA,EAAOvC,QAAMtC,GAClD0B,EAAI+C,SAASpC,EAAQrC,EAAIsC,GAAM0C,MAAK,SAACtC,GACjC4B,EAAShC,EAAMtC,EAAI0C,GACnBK,EAAQkC,KAAK,UAAY5C,QAI7BmB,EAAU,uBACVJ,EAAS,IACT8B,SAASC,eAAe,YAAYC,MAAQ,IAnBvC,gDAyBT5B,EAAU,wBACVN,EAAQ,IACRgC,SAASC,eAAe,sBAAsBC,MAAQ,GA3B7C,yDAAH,wDAqCd,OACI,kBAAC,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKzE,UAAU,UACX,2CACA,wCACA,6BACI,2BACI0E,KAAK,OACLC,UAAS,UAjGX,IAkGEC,WAAW,QACXC,aAAa,MACbC,UAAW,SAACvF,GAAD,OAAO4D,EAAc5D,EAAGiD,IACnCuC,SAAU,SAACxF,GAAD,OAAOkD,EAASlD,EAAEyF,OAAOT,QACnCU,QAAS,SAAC1F,GAAD,OAAOA,EAAEiE,qBAG1B,kBAAC0B,EAAA,EAAD,CACIC,KAAK,KACLC,QAAQ,UACRC,SAA2B,IAAjB7C,EAAMc,OAChBgC,QA3BD,WACfzE,EAAI0E,WA7EW,GA6EYpB,MAAK,SAAC3C,GAC7BoC,EAASpC,EAAQgB,QAqBT,WAUJ,kBAACiC,EAAA,EAAD,CAAKzE,UAAU,UACX,yCACA,2CACA,6BACI,2BACIb,GAAG,qBACHuF,KAAK,OACLC,UAAS,UAzHZ,GA0HGC,WAAW,QACXC,aAAa,MACbC,UAAW,SAACvF,GAAD,OAAO4D,EAAc5D,IAChCwF,SAAU,SAACxF,GAAD,OAAO8C,EAAQ9C,EAAEyF,OAAOT,WAG1C,wCACA,6BACI,2BACIpF,GAAG,WACHuF,KAAK,OACLC,UAAS,UAtIX,IAuIEC,WAAW,QACXC,aAAa,MACbC,UAAW,SAACvF,GAAD,OAAO4D,EAAc5D,EAAG+C,IACnCyC,SAAU,SAACxF,GAAD,OAAOgD,EAAShD,EAAEyF,OAAOT,QACnCU,QAAS,SAAC1F,GAAD,OAAOA,EAAEiE,qBAG1B,kBAAC0B,EAAA,EAAD,CACIC,KAAK,KACLC,QAAQ,UACRpF,UAAU,YACVqF,SAjJC,IAkJGjD,EAAKkB,QAA4C,IAAjBhB,EAAMgB,OAE1CgC,QAAS,kBAAM1B,EAASxB,EAAME,KAPlC,UAaR,6BAAMI,K,yDCzJX,SAAS8C,IAkBZ,IAjBA,IAAIC,EAAQ,CAAC,SAAU,WAAY,QAAS,UACxCC,EAAS,CACT,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,OACA,QACA,QAEAC,EAAO,GACFC,EAAI,EAAGA,EAAIH,EAAMnC,OAAQsC,IAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOpC,OAAQuC,IAAK,CACpC,IAAIC,EAAO,CACPC,MAAOL,EAAOG,GACdG,KAAMP,EAAMG,GACZzG,GAAIuG,EAAOG,GAAKJ,EAAMG,GACtBK,MACkB,QAAdP,EAAOG,GACD,EACAK,SAASR,EAAOG,IAChBK,SAASR,EAAOG,IAChB,GAEdF,EAAKvB,KAAK0B,GAGlB,OAAOH,EA0BJ,IAAMQ,EAAU,SAACC,GAEpB,IAAK,IAAIR,EAAIQ,EAAI9C,OAAS,EAAGsC,EAAI,EAAGA,IAAK,CACrC,IAAIS,EAAIC,KAAKC,MAAMD,KAAKE,UAAYZ,EAAI,IADH,EAElB,CAACQ,EAAIC,GAAID,EAAIR,IAA/BQ,EAAIR,GAFgC,KAE5BQ,EAAIC,GAFwB,OCzE7C,IAEaI,EAEb,SAAsBd,GAClB,IADwB,EACpBe,EAAO,GADa,cAEPf,GAFO,IAExB,2BAAuB,CAAC,IAAfG,EAAc,QACnB,OAAQA,EAAKC,OACT,IAAK,MACDW,EAAKZ,EAAK3G,IAAMwH,OAAQ,MAEpBb,EAAKE,KAAKY,OAAO,GAAGC,cACpB,QACJ,MACJ,IAAK,OACDH,EAAKZ,EAAK3G,IAAMwH,OAAQ,MAEpBb,EAAKE,KAAKY,OAAO,GAAGC,cACpB,QACJ,MAEJ,IAAK,QACDH,EAAKZ,EAAK3G,IAAMwH,OAAQ,MAEpBb,EAAKE,KAAKY,OAAO,GAAGC,cACpB,QACJ,MACJ,IAAK,OACDH,EAAKZ,EAAK3G,IAAMwH,OAAQ,MAEpBb,EAAKE,KAAKY,OAAO,GAAGC,cACpB,QACJ,MACJ,QACIH,EAAKZ,EAAK3G,IAAMwH,OAAQ,KACpBT,SAASJ,EAAKC,OACdD,EAAKE,KAAKY,OAAO,GAAGC,cACpB,UAjCQ,8BAuCxB,OAFAvF,QAAQC,IAAImF,GACZA,EAAI,OAAaC,EAAQ,IAClBD,EAzCeI,CAFftB,KCMJ,IAAMuB,EAAb,uKAUQ,IATM,IAAD,OACDC,EAAOpG,KAAKd,MAAMkH,KAClBC,EAAQ,GAGNC,EAAQ,CACVC,aAAc,UANb,WASIvB,GACL,IAAIE,EAAOkB,EAAKpB,GACZwB,EAAMX,EAAWX,EAAK3G,IAE1B8H,EAAM7C,KACF,kBAACK,EAAA,EAAD,CAAKpB,IAAKyC,EAAK3G,IACX,kBAACkI,EAAA,EAAD,CACIpH,IAAKmH,EACLE,WAAS,EACTJ,MAAOA,EACPlH,UAAW,EAAKF,MAAMyH,cAAgB,aAAe,GACrDjC,QAEI,EAAKxF,MAAMyH,cACL,kBAAM,EAAKzH,MAAM0H,mBAAmB1B,IACpC,kBAfjBF,EAAI,EAAGA,EAAIoB,EAAK1D,OAAQsC,IAAM,EAA9BA,GAsBT,OACI,kBAACpB,EAAA,EAAD,CAAKiD,GAAI,EAAGzH,UAAWY,KAAKd,MAAMyH,cAAgB,SAAW,IACxDN,OAlCjB,GAA0BS,IAAMC,WCHnBC,EAAb,uKAGQ,IAAIlG,EAAWd,KAAKd,MAAM4B,SACtBmG,EAAmBjH,KAAKd,MAAM+H,iBAC9BC,EAASlH,KAAKd,MAAMgI,OACpBC,EAAgBnH,KAAKd,MAAMiI,cAC3BC,EAAYpH,KAAKd,MAAMkI,UACvBrC,EAAO/E,KAAKd,MAAM6F,KAClBsC,EAAQrH,KAAKd,MAAMmI,MACnBjB,EAAOpG,KAAKd,MAAMkH,KAElBkB,EAAetH,KAAKd,MAAMoI,aAG1BC,EACuB,SAAvBD,EAAanC,OACU,UAAvBmC,EAAanC,OACU,SAAvBmC,EAAanC,MAGbqC,EAAgBD,EAGhBE,EAEoC,IAApCP,EAAOD,GAAkBvE,QAAgB6E,EAGzCG,EAAsBR,EAAOD,GAAkBU,MAC/C,SAAC1C,GAAD,OAAOoC,EAAMpC,EAAE1G,OAGfqJ,EAAkCT,EAClCF,GACF9D,QAAO,SAAC8B,GAAD,MAAmB,UAAZA,EAAEE,SAAmBzC,OAGjCmF,EAEwB,MAAvBP,EAAanC,QACTuC,GAC0C,IAA3CP,EAAcF,GAAkBvE,QAEZ,MAAvB4E,EAAanC,OAAsC,IAArBiC,EAAU1E,QAEjB,MAAvB4E,EAAanC,OAAiBJ,EAAKrC,OAAS,GAErB,MAAvB4E,EAAanC,OAA2C,IAA1BiB,EAAKtF,GAAU4B,QAEtB,MAAvB4E,EAAanC,OACkB,IAA5B+B,EAAOpG,GAAU4B,QACmB,IAApCwE,EAAOD,GAAkBvE,QACkB,IAA3CyE,EAAcF,GAAkBvE,QAEb,OAAvB4E,EAAanC,OAEW,SAAvBmC,EAAanC,OAC0B,IAApC+B,EAAOD,GAAkBvE,QAEL,SAAvB4E,EAAanC,OACVyC,EAAkC,EAE1C,OACI,kBAAC,IAAME,SAAP,KACI,kBAACxD,EAAA,EAAD,CACIC,KAAK,KACLE,SAAU+C,EACV9C,QAAS1E,KAAKd,MAAM6I,eAHxB,cAMU,IACV,kBAACzD,EAAA,EAAD,CACIC,KAAK,KACLE,SAAUgD,EACV/C,QAAS1E,KAAKd,MAAM8I,iBAHxB,WAMU,IACV,kBAAC1D,EAAA,EAAD,CACIC,KAAK,KACLE,SAAUoD,EACVnD,QAAS1E,KAAKd,MAAM+I,gBAHxB,oBA/EhB,GAAqCnB,IAAMC,WCA9BmB,EAAb,uKACc,IAAD,OACL,OACI,kBAAC,IAAMJ,SAAP,KACI,kBAACxD,EAAA,EAAD,CAAQC,KAAK,KAAKG,QAAS1E,KAAKd,MAAMiJ,QAAtC,UAEU,IACV,kBAAC7D,EAAA,EAAD,CACIC,KAAK,KACLG,QAAS,kBAAM,EAAKxF,MAAMkJ,QAAQ,EAAKlJ,MAAM4B,WAC7C2D,UAAWzE,KAAKd,MAAMmJ,MAH1B,gBAPhB,GAAuCvB,IAAMC,WCGhCuB,EAAb,4MACI5D,QAAU,SAAC6D,GACP,GAAI,EAAKrJ,MAAMsJ,QAAS,CACpB,GACI,EAAKtJ,MAAMuJ,wBACX,EAAKvJ,MAAMwJ,gBAEX,OAAO,kBAAM,EAAKxJ,MAAMyJ,oBAAoBJ,IACzC,GAAI,EAAKrJ,MAAM0J,sBAAuB,CACzC,GAAI,EAAK1J,MAAMwJ,gBACX,OAAO,kBACH,EAAKxJ,MAAM2J,mBACPN,EACA,kBAEL,GAAI,EAAKrJ,MAAM4J,cAClB,OAAO,kBACH,EAAK5J,MAAM2J,mBACPN,EACA,iBAKpB,OAAO,cAxBf,EA4BIQ,WAAa,WACT,GAAI,EAAK7J,MAAMsJ,QAAS,CACpB,GACI,EAAKtJ,MAAMuJ,wBACX,EAAKvJ,MAAMwJ,gBAEX,OAAO,EACJ,GAAI,EAAKxJ,MAAM0J,sBAAuB,CACzC,GAAI,EAAK1J,MAAMwJ,gBACX,OAAO,EACJ,GAAI,EAAKxJ,MAAM4J,cAClB,OAAO,GAInB,OAAO,GA3Cf,uDA+CQ,IAAIE,EAAQhJ,KAAKd,MAAM8J,MACnB3B,EAAQrH,KAAKd,MAAMmI,MACnBhB,EAAQ,GAENC,EAAQ,CAEV2C,UAAW,UAEfvI,QAAQC,IAAIqI,GACZ,IAAK,IAAIhE,EAAI,EAAGA,EAAIgE,EAAMtG,OAAQsC,IAAK,CACnC,IAAIE,EAAO8D,EAAMhE,GACbwB,EAAMX,EAAWX,EAAK3G,IAO1B8H,EAAM7C,KACF,kBAACK,EAAA,EAAD,CAAKpB,IAAKyC,EAAK3G,GAAI+H,MAAO,IACtB,kBAACG,EAAA,EAAD,CACIpH,IAAKmH,EACLE,WAAS,EACTJ,MAAOA,EACPlH,UAAWY,KAAKd,MAAMsJ,QAAU,aAAe,GAC/C9D,QAAS1E,KAAK0E,QAAQQ,KAEzBmC,EAAMnC,EAAK3G,KACR,kCACM8I,EAAMnC,EAAK3G,IAAI,GADrB,KAEK8I,EAAMnC,EAAK3G,IAAI,GAAGmE,OAFvB,OAQhB,OAAO2D,MAnFf,GAA2BS,IAAMC,WCApBmC,EAAb,4MACIxE,QAAU,SAAC6D,GACP,GAAI,EAAKrJ,MAAMsJ,SACP,EAAKtJ,MAAM0J,sBAAuB,CAClC,GAAI,EAAK1J,MAAMiK,uBACX,OAAO,kBACH,EAAKjK,MAAM2J,mBACPN,EACA,yBAEL,GAAI,EAAKrJ,MAAMkK,qBAClB,OAAO,kBACH,EAAKlK,MAAM2J,mBACPN,EACA,uBAKpB,OAAO,cAnBf,uDA0BQ,IAHA,IAAIlC,EAAQ,GACRgD,EAAerJ,KAAKd,MAAMmK,aAErBrE,EAAI,EAAGA,EAAIqE,EAAa3G,OAAQsC,IAAK,CAC1C,IAAIE,EAAOmE,EAAarE,GACpBwB,EAAMX,EAAWX,EAAK3G,IAE1B8H,EAAM7C,KACF,kBAACK,EAAA,EAAD,CAAKpB,IAAKyC,EAAK3G,IACX,kBAACkI,EAAA,EAAD,CACIpH,IAAKmH,EACLE,WAAS,EACTtH,UAAWY,KAAKd,MAAMsJ,QAAU,aAAe,GAC/C9D,QAAS1E,KAAK0E,QAAQQ,OAMtC,OAAOmB,MA1Cf,GAAkCS,IAAMC,WCA3BuC,EAAb,uKAKQ,IAJM,IAAD,OACDlC,EAAYpH,KAAKd,MAAMkI,UACvBf,EAAQ,GAFP,WAIIrB,GACL,IAAIE,EAAOkC,EAAUpC,GACjBwB,EAAMX,EAAWX,EAAK3G,IAC1B8H,EAAM7C,KACF,kBAACK,EAAA,EAAD,CAAKpB,IAAKyC,EAAK3G,IACX,kBAACkI,EAAA,EAAD,CACIpH,IAAKmH,EACLE,WAAS,EACTtH,UAAW,EAAKF,MAAMsJ,QAAU,aAAe,GAC/C9D,QACI,EAAKxF,MAAMsJ,QAEL,kBAAM,EAAKtJ,MAAM2J,mBAAmB3D,IACpC,kBAbjBF,EAAI,EAAGA,EAAIoC,EAAU1E,OAAQsC,IAAM,EAAnCA,GAoBT,OAAO,kBAACpB,EAAA,EAAD,CAAKiD,GAAI,GAAIR,OAzB5B,GAA+BS,IAAMC,WCHxBwC,EAAb,uKAGQ,IAAIjC,EAAetH,KAAKd,MAAMoI,aAC1BvC,EAAO/E,KAAKd,MAAM6F,KAEtB,OACI,kBAAC,IAAM+C,SAAP,KACI,kBAACxD,EAAA,EAAD,CACIC,KAAK,KACLC,QAAQ,UACRC,UAA4B,IAAlB6C,GAAuC,IAAhBvC,EAAKrC,OACtCgC,QAAS1E,KAAKd,MAAMsK,UAJxB,SAMWzE,EAAKrC,OANhB,KAOU,IACV,kBAAC4B,EAAA,EAAD,CACIC,KAAK,KACLC,QAAQ,SACRC,SAA0B,IAAhBM,EAAKrC,OACfgC,QAAS1E,KAAKd,MAAMuK,SAJxB,iBAhBhB,GAAiC3C,IAAMC,WCA1B2C,EAAb,uKAGQ,IAAIC,EAAgB3J,KAAKd,MAAMyK,cAE/B,OACI,kBAAC,IAAM7B,SAAP,KACI,oDAA0B6B,GAC1B,kCARhB,GAA8B7C,IAAMC,WCOvB6C,EAAb,4MACIC,QAAU,WACN,OACI,kBAAC,IAAM/B,SAAP,KACI,8CACA,kBAAClE,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACI2B,SAAS,EAETQ,MAAO,EAAK9J,MAAM4K,cAClBzC,MAAO,EAAKnI,MAAMmI,MAElBoB,wBAAwB,EACxBE,oBAAqB,EAAKzJ,MAAMyJ,oBAChCD,iBAAiB,OAdzC,EAqBIqB,QAAU,WACN,OACI,kBAACnG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,8CACA,kBAACD,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACI2B,SAAS,EACTQ,MAAO,EAAK9J,MAAM4K,cAClBzC,MAAO,EAAKnI,MAAMmI,MAClBuB,sBACI,EAAK1J,MAAM0J,sBAEfC,mBAAoB,EAAK3J,MAAM2J,mBAC/BH,iBAAiB,MAI7B,kBAAC7E,EAAA,EAAD,KACI,sDACA,kBAACD,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACI2B,SAAS,EACTa,aAAc,EAAKnK,MAAM8K,qBACzBpB,sBACI,EAAK1J,MAAM0J,sBAEfC,mBAAoB,EAAK3J,MAAM2J,mBAC/BM,wBAAwB,QAjDpD,EAyDIc,QAAU,WAIN,IAHA,IAAI5D,EAAQ,GACRtB,EAAO,EAAK7F,MAAM6F,KAFV,WAIHC,GACL,IAAIkF,EAAMnF,EAAKrC,OAAS,EAAIsC,EACxBE,EAAOH,EAAKmF,GACZ1D,EAAMX,EAAWX,EAAK3G,IAE1B8H,EAAM7C,KACF,kBAACK,EAAA,EAAD,CAAKpB,IAAKyC,EAAK3G,IACX,kBAACkI,EAAA,EAAD,CACIpH,IAAKmH,EACLE,WAAS,EACTtH,UAAW,aACXsF,QAAS,kBAAM,EAAKxF,MAAM2J,mBAAmB3D,SAXpDF,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAiBT,OAAO,kBAACpB,EAAA,EAAD,CAAKiD,GAAI,GAAIR,IA9E5B,EAiFI8D,QAAU,WACN,OACI,kBAAC,IAAMrC,SAAP,KACI,kBAAClE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,8CACA,kBAACD,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACI2B,SAAS,EACTQ,MAAO,EAAK9J,MAAM4K,cAClBzC,MAAO,EAAKnI,MAAMmI,MAClBuB,sBACI,EAAK1J,MAAM0J,sBAEfC,mBACI,EAAK3J,MAAM2J,mBAEfH,iBAAiB,MAI7B,kBAAC7E,EAAA,EAAD,KACI,sDACA,kBAACD,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACI2B,SAAS,EACTa,aAAc,EAAKnK,MAAM8K,qBACzBpB,sBACI,EAAK1J,MAAM0J,sBAEfC,mBACI,EAAK3J,MAAM2J,mBAEfM,wBAAwB,OAKxC,6BACA,kBAACvF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0CACA,kBAACD,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACI2B,SAAS,EACTQ,MAAO,EAAK9J,MAAMkL,YAClB/C,MAAO,EAAKnI,MAAMmI,MAClBuB,sBACI,EAAK1J,MAAM0J,sBAEfC,mBACI,EAAK3J,MAAM2J,mBAEfC,eAAe,SAtI/C,EA+IIuB,QAAU,WACN,OACI,kBAAC,IAAMvC,SAAP,KACI,8CACA,kBAAClE,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACI2B,SAAS,EACTQ,MAAO,EAAK9J,MAAM4K,cAClBzC,MAAO,EAAKnI,MAAMmI,MAClBuB,sBAAuB,EAAK1J,MAAM0J,sBAClCC,mBAAoB,EAAK3J,MAAM2J,mBAC/BH,iBAAiB,OA1JzC,EAiKI4B,QAAU,WACN,OACI,kBAAC,IAAMxC,SAAP,KACI,yCACA,kBAAC,EAAD,CACIU,SAAS,EACTpB,UAAW,EAAKlI,MAAMkI,UAEtBwB,sBAAuB,EAAK1J,MAAM0J,sBAClCC,mBAAoB,EAAK3J,MAAM2J,uBA1KnD,uDAkLQ,IAAIvB,EAAetH,KAAKd,MAAMoI,aAE1BmB,EAAyBzI,KAAKd,MAAMuJ,uBACpCG,EAAwB5I,KAAKd,MAAM0J,sBAEvC,OACI,kBAAC,IAAMd,SAAP,KAEKW,GACG,kBAAC,IAAMX,SAAP,KAAiB9H,KAAK6J,WAIF,MAAvBvC,EAAanC,OAAiByD,GAC3B,kBAAC,IAAMd,SAAP,KAAiB9H,KAAK+J,WAIF,MAAvBzC,EAAanC,OAAiByD,GAC3B,kBAAC,IAAMd,SAAP,KAAiB9H,KAAKsK,WAGF,MAAvBhD,EAAanC,OAAiByD,GAC3B,kBAAC,IAAMd,SAAP,KAAiB9H,KAAKiK,WAGF,MAAvB3C,EAAanC,OAAiByD,GAC3B,kBAAC,IAAMd,SAAP,KAAiB9H,KAAKmK,WAGF,SAAvB7C,EAAanC,OAAoByD,GAC9B,kBAAC,IAAMd,SAAP,KAAiB9H,KAAKqK,gBAjN1C,GAAmCvD,IAAMC,W,SC6T1BwD,EAvTf,kDACI,WAAYrL,GAAQ,IAAD,8BACf,cAAMA,IAQV0H,mBAAqB,SAAC1B,GAClB,EAAKsF,SACD,CACIlD,cAA2C,IAA7B,EAAKpF,MAAMoF,aAAsBpC,GAAQ,IAE3D,YACiC,IAA7B,EAAKhD,MAAMoF,aACL5G,QAAQC,IAAI,cACZD,QAAQC,IACJ,sBACA,EAAKuB,MAAMoF,aAAa/I,QAnB3B,EAwBnBkM,gBAAkB,WACd,EAAKD,SAAS,CAAEE,eAAgB,EAAKxI,MAAMwI,iBAzB5B,EA6BnBlB,SAAW,WACP,EAAKtK,MAAMyL,MAAMnB,YA9BF,EAgCnBC,QAAU,WACN,EAAKvK,MAAMyL,MAAMlB,WAjCF,EAmCnB1B,cAAgB,WACZrH,QAAQC,IAAI,kBAAmB,EAAKuB,MAAMoF,aAAa/I,IACvD,EAAKW,MAAMyL,MAAM5C,cAAc,EAAK7F,MAAMoF,cAC1C,EAAKkD,SAAS,CAAElD,cAAe,KAtChB,EAwCnBU,gBAAkB,WACd,EAAK9I,MAAMyL,MAAM3C,mBAzCF,EA2CnBC,eAAiB,WAEb,EAAK/I,MAAMyL,MAAM1C,eACb,EAAK/I,MAAM4B,SACX,EAAKoB,MAAMoF,cAGf,EAAKkD,SAAS,CAAElD,cAAe,KAlDhB,EAsDnBa,OAAS,WACL,EAAKjJ,MAAMyL,MAAMxC,UAvDF,EAyDnBC,QAAU,WACN,EAAKlJ,MAAMyL,MAAMvC,QAAQ,EAAKlJ,MAAM4B,WA1DrB,EA8DnB6H,oBAAsB,SAACJ,GACnB7H,QAAQC,IACJ,eACA,EAAKuB,MAAMoF,aAAa/I,GACxB,UACAgK,EAAWhK,IAGf,EAAKW,MAAMyL,MAAMhC,oBACb,EAAKzG,MAAMoF,aACXiB,GAEJ,EAAKiC,SAAS,CAAElD,cAAe,KA1EhB,EA4EnBuB,mBAAqB,SAACN,EAAYqC,GAC9BlK,QAAQC,IAGJ,UACA4H,EAAWhK,GACX,cACAqM,GAEJ,EAAK1L,MAAMyL,MAAM9B,mBAAmBN,EAAYqC,IAnFhD,EAAK1I,MAAQ,CACToF,cAAe,EACfoD,eAAe,GAJJ,EADvB,qDA2FQ,IAAI5J,EAAWd,KAAKd,MAAM4B,SACtBmG,EAAmB4D,OAAO,EAAIvF,SAASxE,IACvCgK,EAAQ9K,KAAKd,MAAM6L,EAAED,MACrBnB,EAAgB3J,KAAKd,MAAM8L,IAAIrB,cAC/BvC,EAAYpH,KAAKd,MAAM6L,EAAE3D,UACzBrC,EAAO/E,KAAKd,MAAM6L,EAAEhG,KACpBmC,EAASlH,KAAKd,MAAM6L,EAAE7D,OACtBC,EAAgBnH,KAAKd,MAAM6L,EAAE5D,cAC7BG,EAAetH,KAAKkC,MAAMoF,aAC1BD,EAAQrH,KAAKd,MAAM6L,EAAE1D,MAGrB4D,EAAgBjL,KAAKd,MAAM8L,IAAIC,cAC/BtE,EAA4C,WAA5BsE,EAAcnK,GAC9BoK,EAAgD,eAA5BD,EAAcnK,GAClC8H,EAC4B,mBAA5BqC,EAAcnK,GACd2H,EAC4B,oBAA5BwC,EAAcnK,GAElB,OACI,yBAAK1B,UAAU,cAEX,kBAACD,EAAA,EAAD,KACKa,KAAKd,MAAM8L,IAAIG,UAAYnL,KAAKd,MAAM8L,IAAIG,SAASC,QAChD,uCAEKpL,KAAKd,MAAM6B,YAInBf,KAAKd,MAAM8L,IAAIG,WACXnL,KAAKd,MAAM8L,IAAIG,SAASC,QAAU,qCACvC,kBAAC,EAAD,CAAUzB,cAAeA,KAI7B,kBAACxK,EAAA,EAAD,KACI,8CAAoB2L,EAAM7D,GAAkBvE,OAA5C,KACCyE,EAAcrG,GAAU6G,MAAK,SAAC1C,GAAD,MAAmB,MAAZA,EAAEE,UACnC,kBAAC,EAAD,CACIrE,SAAUmG,EACVb,KAAM0E,EAAM7D,MAMxB,kBAAC9H,EAAA,EAAD,CAAWC,UAAU,mBACjB,kBAACiM,EAAA,EAAD,KAEI,kBAACzH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,8CACA,kBAACD,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACImC,MAAO9B,EAAOD,GACdI,MAAOA,MAInB,kBAACxD,EAAA,EAAD,KACI,sDACA,kBAACD,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACIwC,aACIlC,EAAcF,QAOlC,6BAGA,kBAACrD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0CACA,kBAACD,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACImC,MAAO9B,EAAOpG,GACduG,MAAOA,MAInB,kBAACxD,EAAA,EAAD,KACI,kDACA,kBAACD,EAAA,EAAD,CAAKiD,GAAI,GACL,kBAAC,EAAD,CACIwC,aAAclC,EAAcrG,WASlD2H,GAA0BG,IACxB,kBAACzJ,EAAA,EAAD,CAAWC,UAAU,gBACjB,4BACI,6CAEJ,kBAAC,EAAD,CAEIkI,aACImB,EACMnB,EACAtH,KAAKd,MAAM6L,EAAEO,aAAa,GAEpCvG,KAAMA,EACNsC,MAAOA,EACPD,UAAWA,EACXgD,YAAalD,EAAOpG,GACpBgJ,cAAe5C,EAAOD,GACtBsE,mBAAoBpE,EAAcrG,GAClCkJ,qBACI7C,EAAcF,GAGlBwB,uBAAwBA,EACxBG,sBAAuBA,EAEvBD,oBAAqB3I,KAAK2I,oBAC1BE,mBAAoB7I,KAAK6I,sBAMrC,kBAAC1J,EAAA,EAAD,KACI,0CACgB2L,EAAMhK,GAAU4B,OADhC,IACyC,KAClB,IAAlB4E,GACG,4CAAkBA,EAAa/I,GAA/B,MAGR,kBAAC,EAAD,CACI6H,KAAM0E,EAAMhK,GAEZ6F,cAAeA,EACfC,mBAAoB5G,KAAK4G,sBAMhCD,IAAmC,IAAlBW,GACd,kBAACnI,EAAA,EAAD,KACI,kBAAC,EAAD,CAEI4I,cAAe/H,KAAK+H,cACpBC,gBAAiBhI,KAAKgI,gBACtBC,eAAgBjI,KAAKiI,eAErBnH,SAAUA,EACVmG,iBAAkBA,EAClBC,OAAQA,EACRC,cAAeA,EACfG,aAAcA,EACdF,UAAWA,EACXrC,KAAMA,EACNqB,KAAM0E,EACNzD,MAAOA,KAMlB6D,GACG,kBAAC/L,EAAA,EAAD,KACI,kBAAC,EAAD,CACI2B,SAAUA,EACVqH,OAAQnI,KAAKmI,OACbC,QAASpI,KAAKoI,QACdC,KAAMyC,EAAMhK,GAAU6G,MAAK,SAAC1C,GAAD,MAAmB,MAAZA,EAAEE,YAM/CwB,GACG,kBAACxH,EAAA,EAAD,KACI,kBAAC,EAAD,CAEImI,aAAcA,EACdkC,SAAUxJ,KAAKwJ,SACfzE,KAAMA,EAEN0E,QAASzJ,KAAKyJ,WAM1B,kBAACtK,EAAA,EAAD,KACI,kBAACmF,EAAA,EAAD,CACIC,KAAK,KACLC,QAAQ,oBACRC,SAA+B,IAArB2C,EAAU1E,OACpBgC,QAAS1E,KAAKyK,iBAJlB,mBAMqBrD,EAAU1E,OAN/B,KAQC1C,KAAKkC,MAAMwI,eACR,kBAAC,IAAM5C,SAAP,KACI,yCACA,kBAAC,EAAD,CAAWV,UAAWA,MAKlC,6BACA,kCAjThB,GAA2BN,IAAMC,WCX1B,SAASkB,EAAe8C,EAAGC,EAAKQ,EAActG,GAEjD6F,EAAEO,aAAa9H,KAAK0B,GAGpB,IAAIkB,EAAO2E,EAAED,MAAMU,GACftB,EAAM9D,EAAKqF,WAAU,SAACzG,GAAD,OAAOA,EAAEzG,KAAO2G,EAAK3G,MAK9C,GAHA6H,EAAKsF,OAAOxB,EAAK,GAGb,CAAC,IAAK,OAAQ,QAAS,QAAQvC,MAAK,SAAC1C,GAAD,OAAOC,EAAKC,QAAUF,KAC1D,OAAOkD,EAAO4C,EAAGC,GAIA,MAAjBQ,EACAR,EAAIW,OAAOC,iBAAiB,CACxBjI,MAAO,CACHkI,EAAG,OACHC,EAAG,gBAIXd,EAAIW,OAAOC,iBAAiB,CACxBjI,MAAO,CACHkI,EAAG,aACHC,EAAG,UAqBZ,SAAS3D,EAAO4C,EAAGC,GAElBD,EAAEgB,gBACFf,EAAIW,OAAOlC,UAMC,CAAC,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,QAAS,QAAQ9B,MACpE,SAAC1C,GAAD,OAAO8F,EAAEO,aAAa,GAAGnG,QAAUF,OAe3C,SAAkB8F,EAAGC,GACjB,IAAIgB,EAAiBhB,EAAIiB,UAAUjB,EAAIkB,cACnCC,EACAnB,EAAIiB,WAAWjB,EAAIkB,aAAe,GAAKlB,EAAIiB,UAAUvJ,QACrD0J,EAAsBrB,EAAED,MAAMkB,GAC9BK,EAAuBtB,EAAED,MAAMqB,GAC/BG,EAAuBvB,EAAE7D,OAAO8E,GAChCO,EAAwBxB,EAAE7D,OAAOiF,GACjCK,EAA+BzB,EAAE5D,cAAc6E,GAC/CS,EAAgC1B,EAAE5D,cAAcgF,GAEhD9E,EAAQ0D,EAAE1D,MACVD,EAAY2D,EAAE3D,UAEdrC,EAAOgG,EAAEhG,KAIb,OAFWgG,EAAEO,aAAa,GAEbnG,OAET,IAAK,MAED,IADAzE,QAAQC,IAAI,qBACL2L,EAAqB5J,OAAS,GACjC0E,EAAU5D,KAAK8I,EAAqBI,OAExC,KAAOH,EAAsB7J,OAAS,GAClC0E,EAAU5D,KAAK+I,EAAsBG,OAIzC,IAAK,IAAInO,KAAM8I,EAAO,CAMlB,IALA,IAAInC,EAAOmC,EAAM9I,GAAI,GAEjBoO,EAAWtF,EAAM9I,GAAI,GAGlBoO,EAASjK,OAAS,GACrB0E,EAAU5D,KAAKmJ,EAASD,cAGrBrF,EAAMnC,EAAK3G,IAEtB,MAEJ,IAAK,IAED,GADAmC,QAAQC,IAAI,mBACwB,IAAhC0L,EAAqB3J,OACrBhC,QAAQC,IAAI,gCACT,GAAoC,IAAhC0L,EAAqB3J,OAAc,CAC1C,IAAIkK,EAAYP,EAAqBX,OAAO,EAAG,GAAG,GAClDtE,EAAU5D,KAAKoJ,QAEf,IAAK,IAAI5H,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAI4H,EAAYP,EAAqBX,OACjChG,KAAKC,MAAMD,KAAKE,SAAWyG,EAAqB3J,QAChD,GACF,GACF0E,EAAU5D,KAAKoJ,GAGvB,MAEJ,IAAK,IACDlM,QAAQC,IAAI,mBACZyL,EAAoB5I,KAAKuB,EAAK2H,OAC9BN,EAAoB5I,KAAKuB,EAAK2H,OAC9B,MAEJ,IAAK,IAID,IAHAhM,QAAQC,IAAI,mBAGL6L,EAA6B9J,OAAS,GACzC0E,EAAU5D,KAAKgJ,EAA6BE,OAEhD,KAAOD,EAA8B/J,OAAS,GAC1C0E,EAAU5D,KAAKiJ,EAA8BC,OARrD,eAWanO,GACL,IAAI2G,EAAOmC,EAAM9I,GAAI,GACjBsO,EAAQxF,EAAM9I,GAAI,GAClBoO,EAAWtF,EAAM9I,GAAI,GAGzB,GAAIsO,IAAUb,EAAgB,CAC1B,IAAI9B,EAAMoC,EAAqBb,WAC3B,SAACxG,GAAD,OAAOC,EAAK3G,KAAO0G,EAAE1G,MAEzB,IAAa,IAAT2L,EAAY,CACZ,IAAI4C,EAASR,EAAqBZ,OAAOxB,EAAK,GAAG,GACjDqC,EAAsB/I,KAAKsJ,SAE5B,GAAID,IAAUV,EAAiB,CAClC,IAAIjC,EAAMqC,EAAsBd,WAC5B,SAACxG,GAAD,OAAOC,EAAK3G,KAAO0G,EAAE1G,MAEzB,IAAa,IAAT2L,EAAY,CACZ,IAAI4C,EAASP,EAAsBb,OAAOxB,EAAK,GAAG,GAClDoC,EAAqB9I,KAAKsJ,IAKlC,KAAOH,EAASjK,OAAS,GACrB0E,EAAU5D,KAAKmJ,EAASD,cAGrBrF,EAAMnC,EAAK3G,KA7BtB,IAAK,IAAIA,KAAM8I,EAAQ,EAAd9I,GA+BT,MACJ,IAAK,IACDmC,QAAQC,IAAI,wBAEZ,IADA,IAAIoM,EAAqBX,EAAoB1J,OAAQ,EAC9C0J,EAAoB1J,OAAS,GAChCqC,EAAKvB,KAAK4I,EAAoBM,OAElCnH,EAAQwF,EAAEhG,MACV,IAAI,IAAIU,EAAG,EAAGA,GAAIsH,EAAmBtH,IACjC2G,EAAoB5I,KAAKuB,EAAK2H,OAElC,MAGJ,IAAK,IACL,IAAK,QACL,IAAK,OACDhM,QAAQC,IAAI,yBAEZ,IAAI4G,EAAUwD,EAAEO,aAAaI,OAAO,EAAG,GAAG,GAC1Cc,EAA6BhJ,KAAK+D,GAClC,MACJ,QACI7G,QAAQC,IAAI,uCA/IhBqM,CAASjC,EAAGC,GACZA,EAAIW,OAAOlC,WAEXuB,EAAIW,OAAOC,iBAAiB,CACxBjC,cAAe,iBACfsD,OAAQ,SC5DpB,IAyBaC,EAAU,CACnBrM,KAAK,GAAD,OfxCiB,WeyCrBsM,MA3BU,SAAC,GAAiC,IAAD,EbdjB,SAAClB,EAAWC,GACtC,IAAInH,EAAOH,IAEXW,EAAQR,GAER,IAAI+F,EA4CR,SAAmB/F,EAAMkH,EAAWC,GAChC,IAAIpB,EAAQ,GAERsC,EAAUnB,EAAUC,GAEpBmB,EAAOpB,GAAWC,EAAe,GAAKD,EAAUvJ,QAEpDoI,EAAMsC,GAAW,GACjBtC,EAAMuC,GAAQ,GAEd,IAAK,IAAIrI,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAME,EAAOH,EAAK2H,MAClB5B,EAAMsC,GAAS5J,KAAK0B,GAGxB,IAAK,IAAIF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAME,EAAOH,EAAK2H,MAClB5B,EAAMuC,GAAM7J,KAAK0B,GAGrB,OAAO4F,EAhEKwC,CAAUvI,EAAMkH,EAAWC,GAGvC,MAAO,CAAEnH,OAAM+F,QAAO5D,OAwE1B,SAAmB+E,EAAWC,GAC1B,IAAIhF,EAAS,GAETkG,EAAUnB,EAAUC,GACpBmB,EAAOpB,GAAWC,EAAe,GAAKD,EAAUvJ,QAIpD,OAFAwE,EAAOkG,GAAW,GAClBlG,EAAOmG,GAAQ,GACRnG,EAlFMqG,CAAUtB,EAAWC,GAEJ/E,cAmFlC,SAA0B8E,EAAWC,GACjC,IAAI/E,EAAgB,GAEhBiG,EAAUnB,EAAUC,GACpBmB,EAAOpB,GAAWC,EAAe,GAAKD,EAAUvJ,QAIpD,OAFAyE,EAAciG,GAAW,GACzBjG,EAAckG,GAAQ,GACflG,EA5FaqG,CAAiBvB,EAAWC,IaQDuB,CADJ,EAA9BxB,UAA8B,EAAnBC,cAOxB,MAAO,CACHnH,KARuC,EACnCA,KAQJ+F,MATuC,EAC7BA,MASV5D,OAVuC,EACtBA,OAUjBE,UAAW,GACXD,cAZuC,EACdA,cAczBmE,aAAc,GACdS,iBAAiB,EAKjB1E,MAAO,KAOXqG,KAAM,CACFC,QAAS,SAAC5C,EAAGC,GACTA,EAAIW,OAAOC,iBAAiB,CACxBjC,cAAe,SACfsD,OAAQ,UAGhBW,MAAO,SAAC7C,EAAGC,IDwZZ,SAA6BD,GAChC,IAAK,IAAI/F,EAAI,EAAGA,EAAI+F,EAAEO,aAAa5I,OAAQsC,IACvC+F,EAAE3D,UAAU5D,KAAKuH,EAAEO,aAAatG,IAEpC+F,EAAEO,aAAe,GAGjBP,EAAEgB,iBAAkB,EC9ZZ8B,CAAoB9C,IAExB+C,OAAQ,CACJC,KAAM,CACFpD,MAAO,IAEXqD,OAAQ,CACJrD,MAAO,CACHnB,SCvDb,SAAkBuB,EAAGC,GACxB,IAAM9F,EAAO6F,EAAEhG,KAAK2H,MACpB3B,EAAED,MAAME,EAAIrB,eAAenG,KAAK0B,GAChC8F,EAAIW,OAAOlC,WDqDKA,QA6CpB,SAAiBsB,EAAGC,GAChBA,EAAIW,OAAOlC,WA7CK1B,cCnDb,SAAuBgD,EAAGC,EAAK9F,GAClC,IAAIkB,EAAO2E,EAAED,MAAME,EAAIrB,eACnBX,EAAQ+B,EAAE7D,OAAO8D,EAAIrB,eAErBO,EAAM9D,EAAKqF,WAAU,SAACzG,GAAD,OAAOA,EAAEzG,KAAO2G,EAAK3G,MAC1CuO,EAAS1G,EAAKsF,OAAOxB,EAAK,GAAG,GACjClB,EAAMxF,KAAKsJ,GACX9B,EAAIW,OAAOlC,WD6CKzB,gBE5Db,SAAyB+C,EAAGC,GAC/BA,EAAIW,OAAOC,iBAAiB,CACxBjC,cAAe,kBACfsD,OAAQ,UF0DIhF,mBAGRgG,WAAY,CACRtD,MAAO,CACHxC,SACAC,QD7Bb,SAAiB2C,EAAGC,EAAKkD,GAI5B,IAAI9H,EAAO2E,EAAED,MAAMoD,GACfC,EAAW/H,EAAKqF,WAAU,SAACxG,GAAD,MAAmB,MAAZA,EAAEE,SAGvC4F,EAAEgB,iBAAmBhB,EAAEgB,gBAIvB9D,EAAe8C,EAAGC,EAAKkD,EAAe9H,EAAK+H,OCoBnCC,gBAAiB,CACbzD,MAAO,CACHhC,oBEjEb,SAA6BoC,EAAGC,EAAK9F,EAAMd,GAC9C,IAAI4H,EAAiBhB,EAAIiB,UAAUjB,EAAIkB,cACnCC,EACAnB,EAAIiB,WAAWjB,EAAIkB,aAAe,GAAKlB,EAAIiB,UAAUvJ,QAErD2L,EAAetD,EAAED,MAAMkB,GACvBsC,EAAiBvD,EAAE7D,OAAOiF,GAE1BoC,EAAeF,EAAa/K,MAAK,SAAC0B,GAAD,OAAOA,EAAEzG,KAAO2G,EAAK3G,MACtDiQ,EAAcF,EAAehL,MAAK,SAAC0B,GAAD,OAAOA,EAAEzG,KAAO6F,EAAO7F,MAGzDkQ,EACuB,QAAvBF,EAAapJ,MAAkB,IAAMG,SAASiJ,EAAapJ,OAC3DuJ,EAA6B,QAAtBF,EAAYrJ,MAAkB,IAAMG,SAASkJ,EAAYrJ,OAEpE,GAAIG,SAASmJ,IAASnJ,SAASoJ,GAAO,CAClC,IAAI1J,EAAIqJ,EAAa5C,WAAU,SAACxG,GAAD,OAAOA,EAAE1G,KAAO2G,EAAK3G,MAChDoQ,EAAUN,EAAa3C,OAAO1G,EAAG,GAAG,GACpCS,EAAI6I,EAAe7C,WAAU,SAACmD,GAAD,OAAOA,EAAErQ,KAAO6F,EAAO7F,MACpDsQ,EAAUP,EAAe5C,OAAOjG,EAAG,GAAG,GAGtC4B,EAAQ0D,EAAE1D,MACd,GAAIA,EAAMjD,EAAO7F,IAAK,CAKlB,IAJA,IAAI2G,EAAOmC,EAAMjD,EAAO7F,IAAI,GAExBoO,EAAWtF,EAAMjD,EAAO7F,IAAI,GAEzBoO,EAASjK,OAAS,GACrBqI,EAAE3D,UAAU5D,KAAKmJ,EAASD,cAGvBrF,EAAMnC,EAAK3G,IAGtBwM,EAAE3D,UAAU5D,KAAKmL,GACjB5D,EAAE3D,UAAU5D,KAAKqL,GACjB7D,EAAIW,OAAOlC,eAEX/I,QAAQC,IAAI,yCAEZqK,EAAIW,OAAOC,iBAAiB,CACxBjC,cAAe,SACfsD,OAAQ,YFwBR6B,eAAgB,CACZnE,MAAO,CACH9B,mBD4Ib,SAA4BkC,EAAGC,EAAKzC,EAAYqC,IAUvD,SAAwBG,EAAGC,EAAKzC,EAAYqC,GACxC,IAAIoB,EAAiBhB,EAAIiB,UAAUjB,EAAIkB,cACnCC,EACAnB,EAAIiB,WAAWjB,EAAIkB,aAAe,GAAKlB,EAAIiB,UAAUvJ,QACrD4J,EAAuBvB,EAAE7D,OAAO8E,GAChCO,EAAwBxB,EAAE7D,OAAOiF,GACjCM,EAAgC1B,EAAE5D,cAAcgF,GAChDC,EAAsBrB,EAAED,MAAMkB,GAE9B3E,EAAQ0D,EAAE1D,MACVD,EAAY2D,EAAE3D,UACdrC,EAAOgG,EAAEhG,KAETG,EAAO6F,EAAEO,aAAa,GAGtB1D,EAAkC6E,EAA8BtJ,QAChE,SAAC8B,GAAD,MAAmB,UAAZA,EAAEE,SACXzC,OAEF,OAAQwC,EAAKC,OAET,IAAK,IAID,GAHAzE,QAAQC,IAAI,mBAKRiH,EAAkC,GACb,UAArBW,EAAWpD,MAKX,OAHAzE,QAAQC,IACJ,+DAEG,EAIX,GAAoB,yBAAhBiK,EAAwC,CAGxC,IAAIV,EAAMuC,EAA8BhB,WACpC,SAACzG,GAAD,OAAOA,EAAEzG,KAAOgK,EAAWhK,MAE3BuO,EAASL,EAA8Bf,OAAOxB,EAAK,GAAG,GAC1D9C,EAAU5D,KAAKsJ,QAGd,GAAoB,kBAAhBlC,EAAiC,CACtC,IAAKvD,EAAMkB,EAAWhK,IAElB,OADAmC,QAAQC,IAAI,iCACL,EAIX,IAAIgM,EAAWtF,EAAMkB,EAAWhK,IAAI,GAGhCwQ,EAAWpC,EAASlB,WAAU,SAACzG,GAAD,MAAmB,SAAZA,EAAEG,SACvC6J,EAAcrC,EAASjB,OAAOqD,EAAU,GAAG,GAC/C3H,EAAU5D,KAAKwL,GAGS,IAApBrC,EAASjK,eACF2E,EAAMkB,EAAWhK,IAI5B,IAAI2L,EAAMqC,EAAsBd,WAC5B,SAACzG,GAAD,OAAOA,EAAEzG,KAAOgK,EAAWhK,MAE3BuO,EAASP,EAAsBb,OAAOxB,EAAK,GAAG,GAClDoC,EAAqB9I,KAAKsJ,GAG9B,MAEJ,IAAK,IACDpM,QAAQC,IAAI,mBAEZ,IAAIsO,EAAalE,EAAE3D,UAAUqE,WACzB,SAACzG,GAAD,OAAOA,EAAEzG,KAAOgK,EAAWhK,MAG3B2Q,EAAanE,EAAE3D,UAAUsE,OAAOuD,EAAY,GAAG,GACnD7C,EAAoB5I,KAAK0L,GACzB,MAiBJ,IAAK,IAGD,GAFAxO,QAAQC,IAAI,kBAAmBiK,GAI3BhD,EAAkC,GACb,UAArBW,EAAWpD,MAKX,OAHAzE,QAAQC,IACJ,+DAEG,EAIX,GAAoB,yBAAhBiK,EAAwC,CAGxC,IAAIV,EAAMuC,EAA8BhB,WACpC,SAACzG,GAAD,OAAOA,EAAEzG,KAAOgK,EAAWhK,MAE3BuO,EAASL,EAA8Bf,OAAOxB,EAAK,GAAG,GAC1DnF,EAAKvB,KAAKsJ,QAGT,GACe,kBAAhBlC,GACgB,gBAAhBA,EAGA,GAAIvD,EAAMkB,EAAWhK,IAAK,CAStBmC,QAAQC,IACJ,qBACA4H,EAAWhK,GACX8I,EAAMkB,EAAWhK,IAAI,GAAGA,IAK5B,IAAIoO,EAAWtF,EAAMkB,EAAWhK,IAAI,GAGhCwQ,EAAWpC,EAASlB,WACpB,SAACzG,GAAD,MAAmB,SAAZA,EAAEG,SAET6J,EAAcrC,EAASjB,OAAOqD,EAAU,GAAG,GAW/C,GAVAhK,EAAKvB,KAAKwL,GAKc,IAApBrC,EAASjK,eACF2E,EAAMkB,EAAWhK,IAIR,kBAAhBqM,EAAiC,CAEjC,IAAIV,EAAMqC,EAAsBd,WAC5B,SAACzG,GAAD,OAAOA,EAAEzG,KAAOgK,EAAWhK,MAE3BuO,EAASP,EAAsBb,OAAOxB,EAAK,GAAG,GAClDoC,EAAqB9I,KAAKsJ,SAM9B,GAAoB,kBAAhBlC,EAAiC,CAEjC,IAAIV,EAAMqC,EAAsBd,WAC5B,SAACzG,GAAD,OAAOA,EAAEzG,KAAOgK,EAAWhK,MAE3BuO,EAASP,EAAsBb,OAAOxB,EAAK,GAAG,GAClDnF,EAAKvB,KAAKsJ,OACP,CAIH,IAAI5C,EAAMoC,EAAqBb,WAC3B,SAACzG,GAAD,OAAOA,EAAEzG,KAAOgK,EAAWhK,MAE3BuO,EAASR,EAAqBZ,OAAOxB,EAAK,GAAG,GACjDnF,EAAKvB,KAAKsJ,GAItB,MACJ,IAAK,OACDpM,QAAQC,IAAI,sBAGZ,IAAIwO,EAAOpE,EAAEO,aAAaI,OAAO,EAAG,GAAG,GAGlCrE,EAAMkB,EAAWhK,IAIlB8I,EAAMkB,EAAWhK,IAAI,GAAGiF,KAAK2L,GAF7B9H,EAAMkB,EAAWhK,IAAM,CAACgK,EAAY4D,EAAiB,CAACgD,IAM1D,IAAIjF,EAAMqC,EAAsBd,WAC5B,SAACzG,GAAD,OAAOA,EAAEzG,KAAOgK,EAAWhK,MAE3BuO,EAASP,EAAsBb,OAAOxB,EAAK,GAAG,GAClDoC,EAAqB9I,KAAKsJ,GAC1B,MACJ,QACIpM,QAAQC,IAAI,sCAGpB,OAAO,GAtOKyO,CAAerE,EAAGC,EAAKzC,EAAYqC,IAE3CI,EAAIW,OAAOlC,eC3If4F,MAAO,SAACtE,EAAGC,GACP,OGtFD,SAAmBD,EAAGC,GACzB,IAAI5H,EAAS4H,EAAIrB,cACbX,EAAQ+B,EAAE7D,OAAO9D,GACjBiG,EAAe0B,EAAE5D,cAAc/D,GAInC,OAHa4F,EAAM5K,KAAI,SAAC6G,GAAD,OAAOA,EAAEI,SAAOiK,QAAO,SAACrM,EAAGsM,GAAJ,OAAUtM,EAAIsM,IAAG,IAG9C,GAAK,EAFPlG,EAAalG,QAAO,SAAC8B,GAAD,MAAmB,SAAZA,EAAEE,SAAkBzC,OHiFtD8M,CAAUzE,EAAGC,GACN,CAAEI,OAAQJ,EAAIrB,eG7E1B,SAAgBoB,EAAGC,GACtB,IAAI5H,EAAS4H,EAAIiB,UAAUjB,EAAIkB,cAC3BuD,EAAWzE,EAAIiB,WAAWjB,EAAIkB,aAAe,GAAKlB,EAAIiB,UAAUvJ,QAChE0D,EAAO2E,EAAED,MAAM1H,GACfsM,EAAe3E,EAAED,MAAM2E,GAW3B,OACoB,IAXT1E,EAAEhG,KAWJrC,SACJ0D,EAAKuJ,OAAM,SAAC3K,GAAD,MAAmB,SAAZA,EAAEG,UAAqC,IAAhBiB,EAAK1D,SAC/CgN,EAAaC,OACT,SAAC3K,GAAD,MAAmB,SAAZA,EAAEG,OAA4C,IAAxBuK,EAAahN,UH4D1CkN,CAAO7E,EAAGC,GACH,CAAE6E,MAAM,QADnB,GAIJjC,MAAO,SAAC7C,EAAGC,GACPA,EAAIW,OAAOC,iBAAiB,CACxBjI,MAAO,CACHkI,EAAG,OACHC,EAAG,YItFnB,IAAM7L,EAAM,IAAIF,E,EAEuBN,OAAOC,SAAtCC,G,EAAAA,OACFC,I,EADUC,S,EAAUC,SAEpBH,IAGAmQ,GAAaC,YAAO,CACtBC,KAAM9C,EACN+C,MAAO1F,EACP2F,OAAO,EACPC,YAAaC,YAAS,CAAEC,OAAQzQ,OAoGrB0Q,GAjGF,SAACpR,GAAW,IACboC,EAAYpC,EAAZoC,QACA/C,EAAOgS,cAAPhS,GAFY,EAIUgD,mBAAS,IAJnB,mBAIbH,EAJa,KAIJoP,EAJI,OAKIjP,oBAAS,GALb,mBAKbkP,EALa,KAKPC,EALO,KAQpB1O,qBAAU,WACN,IAAM2O,EAAWC,aAAY,WACzB3Q,EAAIiD,WAAW3E,GAAIgF,MACf,SAACnC,GACGoP,EAAWpP,GACSA,EAAQ+B,QAAO,SAACC,GAAD,OAAYA,EAAOvC,QACtC6B,SAAWtB,EAAQsB,QAC/BgO,GAAQ,MAGhB,WACIpP,EAAQkC,KAAK,GAAI,CAAErB,aAAa,SAGzC,KAIH,OAHIsO,GACAI,cAAcF,GAEX,WACHE,cAAcF,MAEnB,CAACF,EAAMrP,EAAQsB,OAAQnE,EAAI+C,IAmB9B,OAAImP,EAEI,kBAACX,GAAD,CACIrP,OAAQlC,EAERuC,SAAUgC,aAAagO,QAAQ,MAC/B7P,YAAa6B,aAAagO,QAAQ,iBAKtC,kBAAC,EAAD,KACI,kBAAClN,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKzE,UAAU,UACX,wCACA,8BACI,2BAAOb,GAAG,SAASoF,MAAOpF,EAAIwS,UAAQ,IAAI,IAC1C,kBAACzM,EAAA,EAAD,CACIC,KAAK,KACLC,QAAQ,oBACRE,QArCJ,SAAC/F,GACJ8E,SAASC,eAAe,UAChCsN,SACTvN,SAASwN,YAAY,QACrBtS,EAAEyF,OAAO8M,UA8BW,UASR,kBAACrN,EAAA,EAAD,CAAKzE,UAAU,UACX,uCACA,6BACKgC,EAAQhD,KAAI,SAACgF,GACV,OAAIA,EAAOvC,KACAuC,EAAOvC,KAEP,WAO3B,6EACA,kBAACyD,EAAA,EAAD,CAAQC,KAAK,KAAKC,QAAQ,SAASE,QAnD7B,WACdzE,EAAIkR,UACA5S,EACAuE,aAAagO,QAAQ,MACrBhO,aAAagO,QAAQ,gBACvBvN,MAAK,WACHjC,EAAQkC,KAAK,UA6CT,gBClFV4N,I,cAAM,WACR,IAAM9P,EAAU+P,cAGhB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,CAAMjQ,QAASA,KAEnB,kBAAC,IAAD,CAAOgQ,OAAK,EAACC,KAAK,cACd,kBAAC,GAAD,CAAMjQ,QAASA,KAEnB,kBAAC,IAAD,CAAUkQ,GAAG,SAKzBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,QAGRlO,SAASC,eAAe,Y","file":"static/js/main.07091958.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/10c.4df13b1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/10d.37c85c54.svg\";","module.exports = __webpack_public_path__ + \"static/media/10h.2d6b7c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/10s.cab5184b.svg\";","module.exports = __webpack_public_path__ + \"static/media/1c.0e32154f.svg\";","module.exports = __webpack_public_path__ + \"static/media/1d.8621e2f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/1h.71322089.svg\";","module.exports = __webpack_public_path__ + \"static/media/1s.7c10f7e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/1s2.841cbc9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/jc.ab199155.svg\";","module.exports = __webpack_public_path__ + \"static/media/jd.bb320848.svg\";","module.exports = __webpack_public_path__ + \"static/media/jh.b0626f15.svg\";","module.exports = __webpack_public_path__ + \"static/media/js.8564915b.svg\";","module.exports = __webpack_public_path__ + \"static/media/qc.07e3d186.svg\";","module.exports = __webpack_public_path__ + \"static/media/qd.15be0e86.svg\";","module.exports = __webpack_public_path__ + \"static/media/qh.5eb8047a.svg\";","module.exports = __webpack_public_path__ + \"static/media/qs.0a16987a.svg\";","module.exports = __webpack_public_path__ + \"static/media/kc.376e8f60.svg\";","module.exports = __webpack_public_path__ + \"static/media/kd.0569d8f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/kh.47695248.svg\";","module.exports = __webpack_public_path__ + \"static/media/ks.c5800ee6.svg\";","module.exports = __webpack_public_path__ + \"static/media/b.c856f238.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon.06725867.svg\";","var map = {\n\t\"./10c.svg\": 59,\n\t\"./10d.svg\": 60,\n\t\"./10h.svg\": 61,\n\t\"./10s.svg\": 62,\n\t\"./1c.svg\": 63,\n\t\"./1d.svg\": 64,\n\t\"./1h.svg\": 65,\n\t\"./1s.svg\": 66,\n\t\"./1s2.svg\": 67\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 109;","var map = {\n\t\"./jc.svg\": 68,\n\t\"./jd.svg\": 69,\n\t\"./jh.svg\": 70,\n\t\"./js.svg\": 71\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 110;","var map = {\n\t\"./qc.svg\": 72,\n\t\"./qd.svg\": 73,\n\t\"./qh.svg\": 74,\n\t\"./qs.svg\": 75\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 111;","var map = {\n\t\"./kc.svg\": 76,\n\t\"./kd.svg\": 77,\n\t\"./kh.svg\": 78,\n\t\"./ks.svg\": 79\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 112;","var map = {\n\t\"./10c.svg\": 59,\n\t\"./10d.svg\": 60,\n\t\"./10h.svg\": 61,\n\t\"./10s.svg\": 62,\n\t\"./1c.svg\": 63,\n\t\"./1d.svg\": 64,\n\t\"./1h.svg\": 65,\n\t\"./1s.svg\": 66,\n\t\"./1s2.svg\": 67,\n\t\"./2c.svg\": 114,\n\t\"./2d.svg\": 115,\n\t\"./2h.svg\": 116,\n\t\"./2s.svg\": 117,\n\t\"./3c.svg\": 118,\n\t\"./3d.svg\": 119,\n\t\"./3h.svg\": 120,\n\t\"./3s.svg\": 121,\n\t\"./4c.svg\": 122,\n\t\"./4d.svg\": 123,\n\t\"./4h.svg\": 124,\n\t\"./4s.svg\": 125,\n\t\"./5c.svg\": 126,\n\t\"./5d.svg\": 127,\n\t\"./5h.svg\": 128,\n\t\"./5s.svg\": 129,\n\t\"./6c.svg\": 130,\n\t\"./6d.svg\": 131,\n\t\"./6h.svg\": 132,\n\t\"./6s.svg\": 133,\n\t\"./7c.svg\": 134,\n\t\"./7d.svg\": 135,\n\t\"./7h.svg\": 136,\n\t\"./7s.svg\": 137,\n\t\"./8c.svg\": 138,\n\t\"./8d.svg\": 139,\n\t\"./8h.svg\": 140,\n\t\"./8s.svg\": 141,\n\t\"./9c.svg\": 142,\n\t\"./9d.svg\": 143,\n\t\"./9h.svg\": 144,\n\t\"./9s.svg\": 145,\n\t\"./b.svg\": 80,\n\t\"./jc.svg\": 68,\n\t\"./jd.svg\": 69,\n\t\"./jh.svg\": 70,\n\t\"./js.svg\": 71,\n\t\"./kc.svg\": 76,\n\t\"./kd.svg\": 77,\n\t\"./kh.svg\": 78,\n\t\"./ks.svg\": 79,\n\t\"./qc.svg\": 72,\n\t\"./qd.svg\": 73,\n\t\"./qh.svg\": 74,\n\t\"./qs.svg\": 75\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 113;","module.exports = __webpack_public_path__ + \"static/media/2c.24b22448.svg\";","module.exports = __webpack_public_path__ + \"static/media/2d.7321e4e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/2h.6a2deba7.svg\";","module.exports = __webpack_public_path__ + \"static/media/2s.4edf0336.svg\";","module.exports = __webpack_public_path__ + \"static/media/3c.292b2a98.svg\";","module.exports = __webpack_public_path__ + \"static/media/3d.49f398ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/3h.813d6a27.svg\";","module.exports = __webpack_public_path__ + \"static/media/3s.49be5d05.svg\";","module.exports = __webpack_public_path__ + \"static/media/4c.275c07ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/4d.a1bab126.svg\";","module.exports = __webpack_public_path__ + \"static/media/4h.7d861d4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/4s.38e6c481.svg\";","module.exports = __webpack_public_path__ + \"static/media/5c.e524096b.svg\";","module.exports = __webpack_public_path__ + \"static/media/5d.36990e4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/5h.13524646.svg\";","module.exports = __webpack_public_path__ + \"static/media/5s.3f2e6976.svg\";","module.exports = __webpack_public_path__ + \"static/media/6c.1efb89f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/6d.00acd557.svg\";","module.exports = __webpack_public_path__ + \"static/media/6h.496542d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/6s.fbf22d0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/7c.43841bb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/7d.ca2cf372.svg\";","module.exports = __webpack_public_path__ + \"static/media/7h.67c1bf1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/7s.547539e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/8c.f067c3a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/8d.1d74e84a.svg\";","module.exports = __webpack_public_path__ + \"static/media/8h.c45d93f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/8s.2fd0f9f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/9c.93c3799f.svg\";","module.exports = __webpack_public_path__ + \"static/media/9d.deb96fda.svg\";","module.exports = __webpack_public_path__ + \"static/media/9h.215de1e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/9s.cc774615.svg\";","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport \"./lobby.scss\";\r\nimport icon from \"../assets/icon.svg\";\r\n\r\n// Lobby is the parent component. Home and Room are the children components.\r\nconst Lobby = (props) => {\r\n    return (\r\n        <Container className=\"lobby-area\">\r\n            <h3>\r\n                Scuttle<img id=\"icon\" src={icon} alt=\"icon\"></img>\r\n            </h3>\r\n            <hr></hr>\r\n            {props.children}\r\n            <small>created by vindara and jshu (december 2020)</small>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Lobby;\r\n","import { GAME_NAME, DEFAULT_PORT, APP_PRODUCTION } from \"./config\";\nimport ky from \"ky\"; // HTTP client I'm using (saw other people use it, looks like it works fine, and it's pretty simple to use)\n\nconst { origin, protocol, hostname } = window.location;\nconst SERVER_URL = APP_PRODUCTION ? origin : `${protocol}//${hostname}:${DEFAULT_PORT}`;\n\n// Make HTTP requests (HTTP method, URL endpoint: description) to boardgame.io Lobby REST API\nexport class LobbyAPI {\n  // create a ky instance\n  constructor() {\n    this.api = ky.create({\n      prefixUrl: `${SERVER_URL}/games/${GAME_NAME}`, // prefix to prepend to URL input\n    });\n  }\n\n  // POST /games/{game_name}/create : create a match\n  async createRoom(numPlayers) {\n    try {\n      const res = await this.api.post(\"create\", { json: { numPlayers: numPlayers } }).json();\n      return res.gameID;\n    } catch (err) {\n      console.log(\"failed to create room:\", err);\n    }\n  }\n\n  // POST /games/{game_name}/{room_id}/join : join a match\n  async joinRoom(roomID, id, name) {\n    try {\n      const res = await this.api.post(roomID + \"/join\", { json: { playerID: id, playerName: name } }).json();\n      const { playerCredentials } = res;\n      return playerCredentials;\n    } catch (err) {\n      console.log(\"failed to join room:\", err);\n    }\n  }\n\n  // POST /games/{game_name}/{room_id}/leave : leave a match\n  async leaveRoom(roomID, id, playerCredentials) {\n    try {\n      await this.api.post(roomID + \"/leave\", { json: { playerID: id, credentials: playerCredentials } }).json();\n    } catch (err) {\n      console.log(\"failed to leave room:\", err);\n    }\n  }\n\n  // POST /games/{name}/{id}/playAgain : play again\n  async playAgain(roomID, id, playerCredentials) {\n    try {\n      const res = await this.api\n        .post(roomID + \"/playAgain\", { json: { playerID: id, credentials: playerCredentials } })\n        .json();\n      return res.nextRoomID;\n    } catch (err) {\n      console.log(\"failed to play again:\", err);\n    }\n  }\n\n  // GET /games/{game_name}/{room_id} : get specific match by its matchID\n  async getPlayers(roomID) {\n    const res = await this.api.get(roomID).json();\n    return res.players;\n  }\n\n  /*----------------- TODO: actually use this request... e.g. show available rooms in the lobby ? -----------------*/\n\n  // GET /games/{game_name} : return an array of all the games\n  async getRooms() {\n    const res = await this.api.get(\"\").json();\n    return res;\n  }\n}\n","export const GAME_NAME = \"Scuttle\";\r\nexport const DEFAULT_PORT = 8000;\r\nexport const APP_PRODUCTION = process.env.NODE_ENV === \"production\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Lobby from \"../pages/Lobby\";\r\nimport { LobbyAPI } from \"../LobbyAPI\";\r\n\r\nimport { Button, Row, Col } from \"react-bootstrap\";\r\n\r\nconst api = new LobbyAPI();\r\n\r\nconst Home = (props) => {\r\n    const { history } = props;\r\n    const maxNameLength = 12;\r\n    const roomIDLength = 9;\r\n\r\n    const [room, setRoom] = useState(\"\");\r\n    const [jName, setJName] = useState(\"\");\r\n    // const jNameCount = maxNameLength - jName.length;\r\n    const numPlayers = 2;\r\n    // const [num, setNum] = useState(2);\r\n    const [cName, setCName] = useState(\"\");\r\n    // const cNameCount = maxNameLength - cName.length;\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n    // handle URL to a room that doesn't exist\r\n    useEffect(() => {\r\n        let timer;\r\n        if (history.location.state && history.location.state.invalidRoom) {\r\n            setErrMsg(\"Room does not exist.\");\r\n            // reset error message\r\n            timer = setTimeout(() => {\r\n                setErrMsg(\"\");\r\n                history.replace();\r\n            }, 4000);\r\n        }\r\n        return () => {\r\n            clearTimeout(timer);\r\n        };\r\n    }, [history]);\r\n\r\n    // restrict inputs, specifically spaces (inspired by https://secret-hitler.online/)\r\n    const handleKeyDown = (e, text) => {\r\n        if (e.key === \" \") {\r\n            if (text) {\r\n                if (\r\n                    text.length === 0 ||\r\n                    text.substring(text.length - 1, text.length) === \" \"\r\n                ) {\r\n                    e.preventDefault();\r\n                }\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    // store user information to localStorage to use later when we arrive at the room\r\n    const saveInfo = (name, id, credentials) => {\r\n        localStorage.setItem(\"name\", name);\r\n        localStorage.setItem(\"id\", id);\r\n        localStorage.setItem(\"credentials\", credentials);\r\n    };\r\n\r\n    const joinRoom = async (roomID, name) => {\r\n        try {\r\n            const players = await api.getPlayers(roomID);\r\n            const uniqueName =\r\n                players\r\n                    .filter((player) => player.name)\r\n                    .map((player) => player.name)\r\n                    .indexOf(name) === -1;\r\n            if (uniqueName) {\r\n                // find first empty seat\r\n                const id = players.find((player) => !player.name).id;\r\n                api.joinRoom(roomID, id, name).then((credentials) => {\r\n                    saveInfo(name, id, credentials);\r\n                    history.push(\"/rooms/\" + roomID);\r\n                });\r\n            } else {\r\n                // handle name conflict error\r\n                setErrMsg(\"name already taken!\");\r\n                setJName(\"\");\r\n                document.getElementById(\"joinName\").value = \"\";\r\n            }\r\n        } catch (err) {\r\n            /*\r\n             * --- TO-DO: setErrMsg(\"room is full\") here if that's the case. currently it's \"room does not exist\" in both cases ---\r\n             */\r\n            setErrMsg(\"Room does not exist.\");\r\n            setRoom(\"\");\r\n            document.getElementById(\"roomIdentification\").value = \"\";\r\n        }\r\n    };\r\n\r\n    const createRoom = () => {\r\n        api.createRoom(numPlayers).then((roomID) => {\r\n            joinRoom(roomID, cName);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Lobby>\r\n            <Row>\r\n                <Col className=\"border\">\r\n                    <h6>Create Game</h6>\r\n                    <label>Name:</label>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            maxLength={`${maxNameLength}`}\r\n                            spellCheck=\"false\"\r\n                            autoComplete=\"off\"\r\n                            onKeyDown={(e) => handleKeyDown(e, cName)}\r\n                            onChange={(e) => setCName(e.target.value)}\r\n                            onPaste={(e) => e.preventDefault()}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"success\"\r\n                        disabled={cName.length === 0}\r\n                        onClick={createRoom}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </Col>\r\n\r\n                <Col className=\"border\">\r\n                    <h6>Join Game</h6>\r\n                    <label>Room ID:</label>\r\n                    <div>\r\n                        <input\r\n                            id=\"roomIdentification\"\r\n                            type=\"text\"\r\n                            maxLength={`${roomIDLength}`}\r\n                            spellCheck=\"false\"\r\n                            autoComplete=\"off\"\r\n                            onKeyDown={(e) => handleKeyDown(e)}\r\n                            onChange={(e) => setRoom(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <label>Name:</label>\r\n                    <div>\r\n                        <input\r\n                            id=\"joinName\"\r\n                            type=\"text\"\r\n                            maxLength={`${maxNameLength}`}\r\n                            spellCheck=\"false\"\r\n                            autoComplete=\"off\"\r\n                            onKeyDown={(e) => handleKeyDown(e, jName)}\r\n                            onChange={(e) => setJName(e.target.value)}\r\n                            onPaste={(e) => e.preventDefault()}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"success\"\r\n                        className=\"lobby-btn\"\r\n                        disabled={\r\n                            room.length !== roomIDLength || jName.length === 0\r\n                        }\r\n                        onClick={() => joinRoom(room, jName)}\r\n                    >\r\n                        Join\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <div>{errMsg}</div>\r\n        </Lobby>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","export const initializeGame = (playOrder, playOrderPos) => {\r\n    let deck = createDeck();\r\n\r\n    shuffle(deck);\r\n\r\n    let hands = drawHands(deck, playOrder, playOrderPos);\r\n    let fields = setFields(playOrder, playOrderPos);\r\n    let specialFields = setSpecialFields(playOrder, playOrderPos);\r\n    return { deck, hands, fields, specialFields };\r\n};\r\n\r\n// also used for create images\r\nexport function createDeck() {\r\n    var suits = [\"Spades\", \"Diamonds\", \"Clubs\", \"Hearts\"];\r\n    var values = [\r\n        \"Ace\",\r\n        \"2\",\r\n        \"3\",\r\n        \"4\",\r\n        \"5\",\r\n        \"6\",\r\n        \"7\",\r\n        \"8\",\r\n        \"9\",\r\n        \"10\",\r\n        \"Jack\",\r\n        \"Queen\",\r\n        \"King\",\r\n    ];\r\n    var deck = [];\r\n    for (var i = 0; i < suits.length; i++) {\r\n        for (var x = 0; x < values.length; x++) {\r\n            var card = {\r\n                Value: values[x],\r\n                Suit: suits[i],\r\n                id: values[x] + suits[i],\r\n                Point:\r\n                    values[x] === \"Ace\"\r\n                        ? 1\r\n                        : parseInt(values[x])\r\n                        ? parseInt(values[x])\r\n                        : 0,\r\n            };\r\n            deck.push(card);\r\n        }\r\n    }\r\n    return deck;\r\n}\r\n\r\nfunction drawHands(deck, playOrder, playOrderPos) {\r\n    let hands = {};\r\n\r\n    let current = playOrder[playOrderPos];\r\n    // wrap around end of playOrder arr\r\n    let next = playOrder[(playOrderPos + 1) % playOrder.length];\r\n\r\n    hands[current] = [];\r\n    hands[next] = [];\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n        const card = deck.pop();\r\n        hands[current].push(card);\r\n    }\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n        const card = deck.pop();\r\n        hands[next].push(card);\r\n    }\r\n\r\n    return hands;\r\n}\r\n\r\nexport const shuffle = (arr) => {\r\n    // shuffle deck (using Fisher-Yates algorithm, might've been overkill since deck is only ~20 at most)\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n};\r\n\r\nfunction setFields(playOrder, playOrderPos) {\r\n    let fields = {};\r\n\r\n    let current = playOrder[playOrderPos];\r\n    let next = playOrder[(playOrderPos + 1) % playOrder.length];\r\n\r\n    fields[current] = [];\r\n    fields[next] = [];\r\n    return fields;\r\n}\r\n\r\nfunction setSpecialFields(playOrder, playOrderPos) {\r\n    let specialFields = {};\r\n\r\n    let current = playOrder[playOrderPos];\r\n    let next = playOrder[(playOrderPos + 1) % playOrder.length];\r\n\r\n    specialFields[current] = [];\r\n    specialFields[next] = [];\r\n    return specialFields;\r\n}\r\n\r\n","import { createDeck } from \"../code/game/Setup.js\";\r\nlet deck = createDeck();\r\n\r\nexport const CardImages = createImages(deck);\r\n\r\nfunction createImages(deck) {\r\n    let list = {};\r\n    for (let card of deck) {\r\n        switch (card.Value) {\r\n            case \"Ace\":\r\n                list[card.id] = require(\"./svgs/\" +\r\n                    1 +\r\n                    card.Suit.charAt(0).toLowerCase() +\r\n                    \".svg\");\r\n                break;\r\n            case \"Jack\":\r\n                list[card.id] = require(\"./svgs/\" +\r\n                    \"j\" +\r\n                    card.Suit.charAt(0).toLowerCase() +\r\n                    \".svg\");\r\n                break;\r\n\r\n            case \"Queen\":\r\n                list[card.id] = require(\"./svgs/\" +\r\n                    \"q\" +\r\n                    card.Suit.charAt(0).toLowerCase() +\r\n                    \".svg\");\r\n                break;\r\n            case \"King\":\r\n                list[card.id] = require(\"./svgs/\" +\r\n                    \"k\" +\r\n                    card.Suit.charAt(0).toLowerCase() +\r\n                    \".svg\");\r\n                break;\r\n            default:\r\n                list[card.id] = require(\"./svgs/\" +\r\n                    parseInt(card.Value) +\r\n                    card.Suit.charAt(0).toLowerCase() +\r\n                    \".svg\");\r\n                break;\r\n        }\r\n    }\r\n    console.log(list);\r\n    list[\"hidden\"] = require(\"./svgs/b.svg\");\r\n    return list;\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./board.scss\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\n\r\nimport { CardImages } from \"../../assets/cards.js\";\r\n\r\nexport class Hand extends React.Component {\r\n    render() {\r\n        let hand = this.props.hand;\r\n        let cells = [];\r\n\r\n        // for second row of cards\r\n        const style = {\r\n            marginBottom: \"0.5rem\",\r\n        };\r\n\r\n        for (let i = 0; i < hand.length; i++) {\r\n            let card = hand[i];\r\n            let img = CardImages[card.id];\r\n\r\n            cells.push(\r\n                <Col key={card.id}>\r\n                    <Image\r\n                        src={img}\r\n                        thumbnail\r\n                        style={style}\r\n                        className={this.props.inActionStage ? \"targetable\" : \"\"}\r\n                        onClick={\r\n                            // note: when using ternary in onClick, have to use ()=>\r\n                            this.props.inActionStage\r\n                                ? () => this.props.toggleSelectedCard(card)\r\n                                : () => void 0\r\n                        }\r\n                    />\r\n                </Col>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Row md={5} className={this.props.inActionStage ? \"active\" : \"\"}>\r\n                {cells}\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./board.scss\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport class PlayCardOptions extends React.Component {\r\n    render() {\r\n        // props\r\n        let playerID = this.props.playerID;\r\n        let playerIDOpponent = this.props.playerIDOpponent;\r\n        let fields = this.props.fields;\r\n        let specialFields = this.props.specialFields;\r\n        let graveyard = this.props.graveyard;\r\n        let deck = this.props.deck;\r\n        let jacks = this.props.jacks;\r\n        let hand = this.props.hand; \r\n\r\n        let selectedCard = this.props.selectedCard;\r\n\r\n        // special cards\r\n        let special =\r\n            selectedCard.Value === \"Jack\" ||\r\n            selectedCard.Value === \"Queen\" ||\r\n            selectedCard.Value === \"King\";\r\n\r\n        // value\r\n        let disabledValue = special;\r\n\r\n        // scuttle\r\n        let disabledScuttle =\r\n            // scuttle on empty opponent field or special card\r\n            fields[playerIDOpponent].length === 0 || special;\r\n\r\n        // special field J/Q checks\r\n        let jackInOpponentField = fields[playerIDOpponent].some(\r\n            (x) => jacks[x.id]\r\n        );\r\n        // let jackInPlayerField = fields[playerID].some((x) => jacks[x.id]);\r\n        let numQueensInOpponentSpecialField = specialFields[\r\n            playerIDOpponent\r\n        ].filter((x) => x.Value === \"Queen\").length;\r\n\r\n        // effect\r\n        let disabledEffect =\r\n            // 2 with no jacks in OPPONENT field and no special cards in OPPONENT field\r\n            (selectedCard.Value === \"2\" &&\r\n                !jackInOpponentField &&\r\n                specialFields[playerIDOpponent].length === 0) ||\r\n            // 3 on empty graveyard\r\n            (selectedCard.Value === \"3\" && graveyard.length === 0) ||\r\n            // 5 on < 2 deck\r\n            (selectedCard.Value === \"5\" && deck.length < 2) ||\r\n            // 7 on 1 card in hand\r\n            (selectedCard.Value === \"7\" && hand[playerID].length === 1) ||\r\n            // 9 when no cards on field\r\n            (selectedCard.Value === \"9\" &&\r\n                fields[playerID].length === 0 &&\r\n                fields[playerIDOpponent].length === 0 &&\r\n                specialFields[playerIDOpponent].length === 0) ||\r\n            // 10 no effect\r\n            selectedCard.Value === \"10\" ||\r\n            // jack on empty opponent field\r\n            (selectedCard.Value === \"Jack\" &&\r\n                fields[playerIDOpponent].length === 0) ||\r\n            // or > 0 queen\r\n            (selectedCard.Value === \"Jack\" &&\r\n                numQueensInOpponentSpecialField > 0);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Button\r\n                    size=\"sm\"\r\n                    disabled={disabledValue}\r\n                    onClick={this.props.playCardValue}\r\n                >\r\n                    Play Value\r\n                </Button>{\" \"}\r\n                <Button\r\n                    size=\"sm\"\r\n                    disabled={disabledScuttle}\r\n                    onClick={this.props.playCardScuttle}\r\n                >\r\n                    Scuttle\r\n                </Button>{\" \"}\r\n                <Button\r\n                    size=\"sm\"\r\n                    disabled={disabledEffect}\r\n                    onClick={this.props.playCardEffect}\r\n                >\r\n                    Play Effect\r\n                </Button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./board.scss\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport class CounteringOptions extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button size=\"sm\" onClick={this.props.accept}>\r\n                    Accept\r\n                </Button>{\" \"}\r\n                <Button\r\n                    size=\"sm\"\r\n                    onClick={() => this.props.counter(this.props.playerID)}\r\n                    disabled={!this.props.has2}\r\n                >\r\n                    Counter\r\n                </Button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./board.scss\";\r\nimport { Col, Image } from \"react-bootstrap\";\r\n\r\nimport { CardImages } from \"../../assets/cards.js\";\r\n\r\nexport class Field extends React.Component {\r\n    onClick = (targetCard) => {\r\n        if (this.props.inPopup) {\r\n            if (\r\n                this.props.inChoosingScuttleStage &&\r\n                this.props.isOpponentField\r\n            ) {\r\n                return () => this.props.chooseScuttleTarget(targetCard);\r\n            } else if (this.props.inChoosingEffectStage) {\r\n                if (this.props.isOpponentField) {\r\n                    return () =>\r\n                        this.props.chooseEffectTarget(\r\n                            targetCard,\r\n                            \"opponentField\"\r\n                        );\r\n                } else if (this.props.isPlayerField) {\r\n                    return () =>\r\n                        this.props.chooseEffectTarget(\r\n                            targetCard,\r\n                            \"playerField\"\r\n                        );\r\n                }\r\n            }\r\n        }\r\n        return () => void 0;\r\n    };\r\n\r\n    // the same as onclick\r\n    targetable = () => {\r\n        if (this.props.inPopup) {\r\n            if (\r\n                this.props.inChoosingScuttleStage &&\r\n                this.props.isOpponentField\r\n            ) {\r\n                return true;\r\n            } else if (this.props.inChoosingEffectStage) {\r\n                if (this.props.isOpponentField) {\r\n                    return true;\r\n                } else if (this.props.isPlayerField) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    render() {\r\n        let field = this.props.field;\r\n        let jacks = this.props.jacks;\r\n        let cells = [];\r\n\r\n        const style = {\r\n            // for jack text\r\n            textAlign: \"center\",\r\n        };\r\n        console.log(field);\r\n        for (let i = 0; i < field.length; i++) {\r\n            let card = field[i];\r\n            let img = CardImages[card.id];\r\n            // let owner, numJacked;\r\n            // if (jacks[card]) {\r\n            //     owner = jacks[card][0];\r\n            //     numJacked = jacks[card][1].length;\r\n            // }\r\n\r\n            cells.push(\r\n                <Col key={card.id} style={{}}>\r\n                    <Image\r\n                        src={img}\r\n                        thumbnail\r\n                        style={style}\r\n                        className={this.props.inPopup ? \"targetable\" : \"\"}\r\n                        onClick={this.onClick(card)}\r\n                    ></Image>\r\n                    {jacks[card.id] && (\r\n                        <span>\r\n                            ({jacks[card.id][1]},j\r\n                            {jacks[card.id][2].length})\r\n                        </span>\r\n                    )}\r\n                </Col>\r\n            );\r\n        }\r\n        return cells;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./board.scss\";\r\n\r\nimport { Col, Image } from \"react-bootstrap/\";\r\n\r\nimport { CardImages } from \"../../assets/cards.js\";\r\n\r\nexport class SpecialField extends React.Component {\r\n    onClick = (targetCard) => {\r\n        if (this.props.inPopup) {\r\n            if (this.props.inChoosingEffectStage) {\r\n                if (this.props.isOpponentSpecialField) {\r\n                    return () =>\r\n                        this.props.chooseEffectTarget(\r\n                            targetCard,\r\n                            \"opponentSpecialField\"\r\n                        );\r\n                } else if (this.props.isPlayerSpecialField) {\r\n                    return () =>\r\n                        this.props.chooseEffectTarget(\r\n                            targetCard,\r\n                            \"playerSpecialField\"\r\n                        );\r\n                }\r\n            }\r\n        }\r\n        return () => void 0;\r\n    };\r\n\r\n    render() {\r\n        let cells = [];\r\n        let specialField = this.props.specialField;\r\n\r\n        for (let i = 0; i < specialField.length; i++) {\r\n            let card = specialField[i];\r\n            let img = CardImages[card.id];\r\n\r\n            cells.push(\r\n                <Col key={card.id}>\r\n                    <Image\r\n                        src={img}\r\n                        thumbnail\r\n                        className={this.props.inPopup ? \"targetable\" : \"\"}\r\n                        onClick={this.onClick(card)}\r\n                    ></Image>\r\n                </Col>\r\n            );\r\n        }\r\n\r\n        return cells;\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./board.scss\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\n\r\nimport { CardImages } from \"../../assets/cards.js\";\r\n\r\nexport class Graveyard extends React.Component {\r\n    render() {\r\n        let graveyard = this.props.graveyard;\r\n        let cells = [];\r\n\r\n        for (let i = 0; i < graveyard.length; i++) {\r\n            let card = graveyard[i];\r\n            let img = CardImages[card.id];\r\n            cells.push(\r\n                <Col key={card.id}>\r\n                    <Image\r\n                        src={img}\r\n                        thumbnail\r\n                        className={this.props.inPopup ? \"targetable\" : \"\"}\r\n                        onClick={\r\n                            this.props.inPopup\r\n                                ? // we know we're in graveyard, so don't need to pass targetField\r\n                                  () => this.props.chooseEffectTarget(card)\r\n                                : () => void 0\r\n                        }\r\n                    ></Image>\r\n                </Col>\r\n            );\r\n        }\r\n\r\n        return <Row md={5}>{cells}</Row>;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./board.scss\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport class TurnOptions extends React.Component {\r\n    render() {\r\n        // props\r\n        let selectedCard = this.props.selectedCard;\r\n        let deck = this.props.deck;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Button\r\n                    size=\"sm\"\r\n                    variant=\"success\"\r\n                    disabled={selectedCard !== -1 || deck.length === 0}\r\n                    onClick={this.props.drawCard}\r\n                >\r\n                    Draw ({deck.length})\r\n                </Button>{\" \"}\r\n                <Button\r\n                    size=\"sm\"\r\n                    variant=\"danger\"\r\n                    disabled={deck.length !== 0}\r\n                    onClick={this.props.endTurn}\r\n                >\r\n                    End Turn\r\n                </Button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./board.scss\";\r\n\r\nexport class TurnInfo extends React.Component {\r\n    render() {\r\n        // props\r\n        let currentPlayer = this.props.currentPlayer;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h5>Current Turn: Player {currentPlayer}</h5>\r\n                <hr></hr>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\n// components\r\nimport { Field } from \"./Field\";\r\nimport { SpecialField } from \"./SpecialField\";\r\nimport { Graveyard } from \"./Graveyard\";\r\n\r\nimport \"./board.scss\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport { CardImages } from \"../../assets/cards.js\";\r\n\r\nexport class ChoosingPopup extends React.Component {\r\n    scuttle = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h6>Opponent Field</h6>\r\n                <Row md={5}>\r\n                    <Field\r\n                        inPopup={true}\r\n                        // for display\r\n                        field={this.props.opponentField}\r\n                        jacks={this.props.jacks}\r\n                        // onclick\r\n                        inChoosingScuttleStage={true}\r\n                        chooseScuttleTarget={this.props.chooseScuttleTarget}\r\n                        isOpponentField={true}\r\n                    />\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    effect2 = () => {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <h6>Opponent Field</h6>\r\n                    <Row md={3}>\r\n                        <Field\r\n                            inPopup={true}\r\n                            field={this.props.opponentField}\r\n                            jacks={this.props.jacks}\r\n                            inChoosingEffectStage={\r\n                                this.props.inChoosingEffectStage\r\n                            }\r\n                            chooseEffectTarget={this.props.chooseEffectTarget}\r\n                            isOpponentField={true}\r\n                        />\r\n                    </Row>\r\n                </Col>\r\n                <Col>\r\n                    <h6>Opponent Special Field</h6>\r\n                    <Row md={3}>\r\n                        <SpecialField\r\n                            inPopup={true}\r\n                            specialField={this.props.opponentSpecialField}\r\n                            inChoosingEffectStage={\r\n                                this.props.inChoosingEffectStage\r\n                            }\r\n                            chooseEffectTarget={this.props.chooseEffectTarget}\r\n                            isOpponentSpecialField={true}\r\n                        />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    };\r\n\r\n    effect7 = () => {\r\n        let cells = [];\r\n        let deck = this.props.deck;\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n            let idx = deck.length - 1 - i;\r\n            let card = deck[idx];\r\n            let img = CardImages[card.id];\r\n\r\n            cells.push(\r\n                <Col key={card.id}>\r\n                    <Image\r\n                        src={img}\r\n                        thumbnail\r\n                        className={\"targetable\"}\r\n                        onClick={() => this.props.chooseEffectTarget(card)}\r\n                    ></Image>\r\n                </Col>\r\n            );\r\n        }\r\n\r\n        return <Row md={5}>{cells}</Row>;\r\n    };\r\n\r\n    effect9 = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col>\r\n                        <h6>Opponent Field</h6>\r\n                        <Row md={3}>\r\n                            <Field\r\n                                inPopup={true}\r\n                                field={this.props.opponentField}\r\n                                jacks={this.props.jacks}\r\n                                inChoosingEffectStage={\r\n                                    this.props.inChoosingEffectStage\r\n                                }\r\n                                chooseEffectTarget={\r\n                                    this.props.chooseEffectTarget\r\n                                }\r\n                                isOpponentField={true}\r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        <h6>Opponent Special Field</h6>\r\n                        <Row md={3}>\r\n                            <SpecialField\r\n                                inPopup={true}\r\n                                specialField={this.props.opponentSpecialField}\r\n                                inChoosingEffectStage={\r\n                                    this.props.inChoosingEffectStage\r\n                                }\r\n                                chooseEffectTarget={\r\n                                    this.props.chooseEffectTarget\r\n                                }\r\n                                isOpponentSpecialField={true}\r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <hr></hr>\r\n                <Row>\r\n                    <Col>\r\n                        <h6>Your Field</h6>\r\n                        <Row md={5}>\r\n                            <Field\r\n                                inPopup={true}\r\n                                field={this.props.playerField}\r\n                                jacks={this.props.jacks}\r\n                                inChoosingEffectStage={\r\n                                    this.props.inChoosingEffectStage\r\n                                }\r\n                                chooseEffectTarget={\r\n                                    this.props.chooseEffectTarget\r\n                                }\r\n                                isPlayerField={true}\r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    effectJ = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h6>Opponent Field</h6>\r\n                <Row md={5}>\r\n                    <Field\r\n                        inPopup={true}\r\n                        field={this.props.opponentField}\r\n                        jacks={this.props.jacks}\r\n                        inChoosingEffectStage={this.props.inChoosingEffectStage}\r\n                        chooseEffectTarget={this.props.chooseEffectTarget}\r\n                        isOpponentField={true}\r\n                    />\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    effect3 = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h6>Graveyard</h6>\r\n                <Graveyard\r\n                    inPopup={true}\r\n                    graveyard={this.props.graveyard}\r\n                    // onclick\r\n                    inChoosingEffectStage={this.props.inChoosingEffectStage}\r\n                    chooseEffectTarget={this.props.chooseEffectTarget}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        // props\r\n        let selectedCard = this.props.selectedCard;\r\n        // stages\r\n        let inChoosingScuttleStage = this.props.inChoosingScuttleStage;\r\n        let inChoosingEffectStage = this.props.inChoosingEffectStage;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {/* scuttling, opponent field */}\r\n                {inChoosingScuttleStage && (\r\n                    <React.Fragment>{this.scuttle()}</React.Fragment>\r\n                )}\r\n\r\n                {/* 2 opponent field and opponent special field */}\r\n                {selectedCard.Value === \"2\" && inChoosingEffectStage && (\r\n                    <React.Fragment>{this.effect2()}</React.Fragment>\r\n                )}\r\n\r\n                {/* 3 graveyard */}\r\n                {selectedCard.Value === \"3\" && inChoosingEffectStage && (\r\n                    <React.Fragment>{this.effect3()}</React.Fragment>\r\n                )}\r\n                {/* 7 */}\r\n                {selectedCard.Value === \"7\" && inChoosingEffectStage && (\r\n                    <React.Fragment>{this.effect7()}</React.Fragment>\r\n                )}\r\n                {/* 9 ALL fields */}\r\n                {selectedCard.Value === \"9\" && inChoosingEffectStage && (\r\n                    <React.Fragment>{this.effect9()}</React.Fragment>\r\n                )}\r\n                {/* J opponent field */}\r\n                {selectedCard.Value === \"Jack\" && inChoosingEffectStage && (\r\n                    <React.Fragment>{this.effectJ()}</React.Fragment>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n// import \"./board.scss\";\r\n\r\n// components\r\nimport { Hand } from \"./Hand\";\r\nimport { PlayCardOptions } from \"./PlayCardOptions\";\r\nimport { CounteringOptions } from \"./CounteringOptions\";\r\nimport { Field } from \"./Field\";\r\nimport { SpecialField } from \"./SpecialField\";\r\nimport { Graveyard } from \"./Graveyard\";\r\nimport { TurnOptions } from \"./TurnOptions\";\r\nimport { TurnInfo } from \"./TurnInfo\";\r\nimport { ChoosingPopup } from \"./ChoosingPopup\";\r\n\r\n// bootstrap\r\nimport { Container, Button, Jumbotron, Row, Col } from \"react-bootstrap\";\r\n\r\nexport class Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedCard: -1,\r\n            showGraveyard: false,\r\n        };\r\n    }\r\n\r\n    // togglers\r\n    toggleSelectedCard = (card) => {\r\n        this.setState(\r\n            {\r\n                selectedCard: this.state.selectedCard === -1 ? card : -1,\r\n            },\r\n            () => {\r\n                this.state.selectedCard === -1\r\n                    ? console.log(\"unselected\")\r\n                    : console.log(\r\n                          \"selectedCard id is \",\r\n                          this.state.selectedCard.id\r\n                      );\r\n            }\r\n        );\r\n    };\r\n    toggleGraveyard = () => {\r\n        this.setState({ showGraveyard: !this.state.showGraveyard });\r\n    };\r\n\r\n    // action moves\r\n    drawCard = () => {\r\n        this.props.moves.drawCard();\r\n    };\r\n    endTurn = () => {\r\n        this.props.moves.endTurn();\r\n    };\r\n    playCardValue = () => {\r\n        console.log(\"playCardValue: \", this.state.selectedCard.id);\r\n        this.props.moves.playCardValue(this.state.selectedCard);\r\n        this.setState({ selectedCard: -1 });\r\n    };\r\n    playCardScuttle = () => {\r\n        this.props.moves.playCardScuttle();\r\n    };\r\n    playCardEffect = () => {\r\n        // kicks off the playcardeffect code, which can branch into target\r\n        this.props.moves.playCardEffect(\r\n            this.props.playerID,\r\n            this.state.selectedCard\r\n        );\r\n        // at this point, selectedCard is at counter_chain[0], so we can reset it\r\n        this.setState({ selectedCard: -1 });\r\n    };\r\n\r\n    // countering moves\r\n    accept = () => {\r\n        this.props.moves.accept();\r\n    };\r\n    counter = () => {\r\n        this.props.moves.counter(this.props.playerID);\r\n    };\r\n\r\n    // choosing moves\r\n    chooseScuttleTarget = (targetCard) => {\r\n        console.log(\r\n            \"scuttleCard:\",\r\n            this.state.selectedCard.id,\r\n            \"target:\",\r\n            targetCard.id\r\n        );\r\n\r\n        this.props.moves.chooseScuttleTarget(\r\n            this.state.selectedCard,\r\n            targetCard\r\n        );\r\n        this.setState({ selectedCard: -1 });\r\n    };\r\n    chooseEffectTarget = (targetCard, targetField) => {\r\n        console.log(\r\n            // \"chooseEffectTarget:\",\r\n            // this.state.selectedCard.id,\r\n            \"target:\",\r\n            targetCard.id,\r\n            \"targetField\",\r\n            targetField\r\n        );\r\n        this.props.moves.chooseEffectTarget(targetCard, targetField);\r\n    };\r\n\r\n    render() {\r\n        // props\r\n        let playerID = this.props.playerID;\r\n        let playerIDOpponent = String(1 - parseInt(playerID));\r\n        let hands = this.props.G.hands;\r\n        let currentPlayer = this.props.ctx.currentPlayer;\r\n        let graveyard = this.props.G.graveyard;\r\n        let deck = this.props.G.deck;\r\n        let fields = this.props.G.fields;\r\n        let specialFields = this.props.G.specialFields;\r\n        let selectedCard = this.state.selectedCard;\r\n        let jacks = this.props.G.jacks;\r\n\r\n        // stages\r\n        let activePlayers = this.props.ctx.activePlayers;\r\n        let inActionStage = activePlayers[playerID] === \"action\";\r\n        let inCounteringStage = activePlayers[playerID] === \"countering\";\r\n        let inChoosingEffectStage =\r\n            activePlayers[playerID] === \"choosingEffect\";\r\n        let inChoosingScuttleStage =\r\n            activePlayers[playerID] === \"choosingScuttle\";\r\n\r\n        return (\r\n            <div className=\"board-area\">\r\n                {/* turn information */}\r\n                <Container>\r\n                    {this.props.ctx.gameover && this.props.ctx.gameover.winner && (\r\n                        <h1>\r\n                            WINNER: {/* {this.props.ctx.gameover.winner} */}\r\n                            {this.props.playerName}\r\n                            {/* playerName is tied to playerID which is tied to winner */}\r\n                        </h1>\r\n                    )}\r\n                    {this.props.ctx.gameover &&\r\n                        !this.props.ctx.gameover.winner && <h1>DRAW!</h1>}\r\n                    <TurnInfo currentPlayer={currentPlayer} />\r\n                </Container>\r\n\r\n                {/* 8 effect */}\r\n                <Container>\r\n                    <h6>Opponent Hand ({hands[playerIDOpponent].length})</h6>\r\n                    {specialFields[playerID].some((x) => x.Value === \"8\") && (\r\n                        <Hand\r\n                            playerID={playerIDOpponent}\r\n                            hand={hands[playerIDOpponent]}\r\n                        />\r\n                    )}\r\n                </Container>\r\n\r\n                {/* fields */}\r\n                <Container className=\"container-field\">\r\n                    <Jumbotron>\r\n                        {/* opponent player fields */}\r\n                        <Row>\r\n                            <Col>\r\n                                <h6>Opponent Field</h6>\r\n                                <Row md={3}>\r\n                                    <Field\r\n                                        field={fields[playerIDOpponent]}\r\n                                        jacks={jacks}\r\n                                    />\r\n                                </Row>\r\n                            </Col>\r\n                            <Col>\r\n                                <h6>Opponent Special Field</h6>\r\n                                <Row md={3}>\r\n                                    <SpecialField\r\n                                        specialField={\r\n                                            specialFields[playerIDOpponent]\r\n                                        }\r\n                                    />\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <hr></hr>\r\n\r\n                        {/* current player fields */}\r\n                        <Row>\r\n                            <Col>\r\n                                <h6>Your Field</h6>\r\n                                <Row md={3}>\r\n                                    <Field\r\n                                        field={fields[playerID]}\r\n                                        jacks={jacks}\r\n                                    />\r\n                                </Row>\r\n                            </Col>\r\n                            <Col>\r\n                                <h6>Your Special Field</h6>\r\n                                <Row md={3}>\r\n                                    <SpecialField\r\n                                        specialField={specialFields[playerID]}\r\n                                    />\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Jumbotron>\r\n                </Container>\r\n\r\n                {/* choosing popup */}\r\n                {(inChoosingScuttleStage || inChoosingEffectStage) && (\r\n                    <Container className=\"border popup\">\r\n                        <h6>\r\n                            <u>Choose Target</u>\r\n                        </h6>\r\n                        <ChoosingPopup\r\n                            // props\r\n                            selectedCard={\r\n                                inChoosingScuttleStage\r\n                                    ? selectedCard\r\n                                    : this.props.G.counterChain[0]\r\n                            }\r\n                            deck={deck}\r\n                            jacks={jacks}\r\n                            graveyard={graveyard}\r\n                            playerField={fields[playerID]}\r\n                            opponentField={fields[playerIDOpponent]}\r\n                            playerSpecialField={specialFields[playerID]}\r\n                            opponentSpecialField={\r\n                                specialFields[playerIDOpponent]\r\n                            }\r\n                            // stages\r\n                            inChoosingScuttleStage={inChoosingScuttleStage}\r\n                            inChoosingEffectStage={inChoosingEffectStage}\r\n                            // moves\r\n                            chooseScuttleTarget={this.chooseScuttleTarget}\r\n                            chooseEffectTarget={this.chooseEffectTarget}\r\n                        />\r\n                    </Container>\r\n                )}\r\n\r\n                {/* hand */}\r\n                <Container>\r\n                    <h6>\r\n                        Your Hand ({hands[playerID].length}){\" \"}\r\n                        {selectedCard !== -1 && (\r\n                            <span>(selected: {selectedCard.id})</span>\r\n                        )}\r\n                    </h6>\r\n                    <Hand\r\n                        hand={hands[playerID]}\r\n                        // for onclick\r\n                        inActionStage={inActionStage}\r\n                        toggleSelectedCard={this.toggleSelectedCard}\r\n                    />\r\n                </Container>\r\n\r\n                {/* turn stuff */}\r\n                {/* playcard options */}\r\n                {inActionStage && selectedCard !== -1 && (\r\n                    <Container>\r\n                        <PlayCardOptions\r\n                            // moves\r\n                            playCardValue={this.playCardValue}\r\n                            playCardScuttle={this.playCardScuttle}\r\n                            playCardEffect={this.playCardEffect}\r\n                            // props for disabling buttons\r\n                            playerID={playerID}\r\n                            playerIDOpponent={playerIDOpponent}\r\n                            fields={fields}\r\n                            specialFields={specialFields}\r\n                            selectedCard={selectedCard}\r\n                            graveyard={graveyard}\r\n                            deck={deck}\r\n                            hand={hands}\r\n                            jacks={jacks}\r\n                        />\r\n                    </Container>\r\n                )}\r\n\r\n                {/* countering options */}\r\n                {inCounteringStage && (\r\n                    <Container>\r\n                        <CounteringOptions\r\n                            playerID={playerID}\r\n                            accept={this.accept}\r\n                            counter={this.counter}\r\n                            has2={hands[playerID].some((x) => x.Value === \"2\")}\r\n                        />\r\n                    </Container>\r\n                )}\r\n\r\n                {/* turn options */}\r\n                {inActionStage && (\r\n                    <Container>\r\n                        <TurnOptions\r\n                            // draw card\r\n                            selectedCard={selectedCard}\r\n                            drawCard={this.drawCard}\r\n                            deck={deck}\r\n                            // end turn\r\n                            endTurn={this.endTurn}\r\n                        />\r\n                    </Container>\r\n                )}\r\n\r\n                {/* graveyard button is always visible */}\r\n                <Container>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"outline-secondary\"\r\n                        disabled={graveyard.length === 0}\r\n                        onClick={this.toggleGraveyard}\r\n                    >\r\n                        View Graveyard ({graveyard.length})\r\n                    </Button>\r\n                    {this.state.showGraveyard && (\r\n                        <React.Fragment>\r\n                            <h6>Graveyard</h6>\r\n                            <Graveyard graveyard={graveyard} />\r\n                        </React.Fragment>\r\n                    )}\r\n                </Container>\r\n\r\n                <hr></hr>\r\n                <hr></hr>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import { shuffle } from \"./Setup\";\r\n\r\n/*\r\n    playerAction is the player playing the card effect\r\n    the other player is then put into countering stage\r\n*/\r\nexport function playCardEffect(G, ctx, playerAction, card) {\r\n    // push card into counterChain\r\n    G.counterChain.push(card);\r\n\r\n    // safe to remove card from hand, it's now saved in counterChain\r\n    let hand = G.hands[playerAction];\r\n    let idx = hand.findIndex((i) => i.id === card.id);\r\n    // let remove = hand.splice(idx, 1)[0];\r\n    hand.splice(idx, 1);\r\n\r\n    // special cards immediately go through\r\n    if ([\"8\", \"Jack\", \"Queen\", \"King\"].some((x) => card.Value === x)) {\r\n        return accept(G, ctx);\r\n    }\r\n\r\n    // set stage\r\n    if (playerAction === \"0\") {\r\n        ctx.events.setActivePlayers({\r\n            value: {\r\n                0: \"idle\",\r\n                1: \"countering\",\r\n            },\r\n        });\r\n    } else {\r\n        ctx.events.setActivePlayers({\r\n            value: {\r\n                0: \"countering\",\r\n                1: \"idle\",\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport function counter(G, ctx, playerCounter) {\r\n    // at this point, ctx.currentPlayer is STILL the player who played the FIRST effect, so we can't use that as a reference\r\n\r\n    // find 2 in countering player\r\n    let hand = G.hands[playerCounter];\r\n    let twoIndex = hand.findIndex((x) => x.Value === \"2\");\r\n\r\n    // toggle countered\r\n    G.effectCountered = !G.effectCountered;\r\n\r\n    // play as its own cardEffect\r\n    // which is added to the counterChain\r\n    playCardEffect(G, ctx, playerCounter, hand[twoIndex]);\r\n}\r\n\r\nexport function accept(G, ctx) {\r\n    // check if effect was countered\r\n    if (G.effectCountered) {\r\n        ctx.events.endTurn();\r\n        return;\r\n    }\r\n\r\n    // effect card is at counterChain[0]\r\n    // check if effect requires target\r\n    let no_target = [\"Ace\", \"4\", \"5\", \"6\", \"7\", \"8\", \"10\", \"Queen\", \"King\"].some(\r\n        (x) => G.counterChain[0].Value === x\r\n    );\r\n\r\n    if (no_target) {\r\n        // immediate card effect\r\n        doEffect(G, ctx);\r\n        ctx.events.endTurn();\r\n    } else {\r\n        ctx.events.setActivePlayers({\r\n            currentPlayer: \"choosingEffect\",\r\n            others: \"idle\",\r\n        });\r\n    }\r\n}\r\n\r\nfunction doEffect(G, ctx) {\r\n    let current_player = ctx.playOrder[ctx.playOrderPos];\r\n    let opponent_player =\r\n        ctx.playOrder[(ctx.playOrderPos + 1) % ctx.playOrder.length];\r\n    let current_player_hand = G.hands[current_player];\r\n    let opponent_player_hand = G.hands[opponent_player];\r\n    let current_player_field = G.fields[current_player];\r\n    let opponent_player_field = G.fields[opponent_player];\r\n    let current_player_special_field = G.specialFields[current_player];\r\n    let opponent_player_special_field = G.specialFields[opponent_player];\r\n\r\n    let jacks = G.jacks;\r\n    let graveyard = G.graveyard;\r\n    // let fields = G.fields;\r\n    let deck = G.deck;\r\n\r\n    let card = G.counterChain[0];\r\n\r\n    switch (card.Value) {\r\n        // clear field\r\n        case \"Ace\":\r\n            console.log(\"reaching ace case\");\r\n            while (current_player_field.length > 0) {\r\n                graveyard.push(current_player_field.pop());\r\n            }\r\n            while (opponent_player_field.length > 0) {\r\n                graveyard.push(opponent_player_field.pop());\r\n            }\r\n\r\n            // clear jacks\r\n            for (let id in jacks) {\r\n                let card = jacks[id][0];\r\n                // let owner = jacks[id][1];\r\n                let jacklist = jacks[id][2];\r\n\r\n                //  add jacks to graveyard\r\n                while (jacklist.length > 0) {\r\n                    graveyard.push(jacklist.pop());\r\n                }\r\n                // clear key\r\n                delete jacks[card.id];\r\n            }\r\n            break;\r\n        // discard 2\r\n        case \"4\":\r\n            console.log(\"reaching 4 case\");\r\n            if (opponent_player_hand.length === 0) {\r\n                console.log(\"bm, no cards to discard\");\r\n            } else if (opponent_player_hand.length === 1) {\r\n                let discarded = opponent_player_hand.splice(0, 1)[0];\r\n                graveyard.push(discarded);\r\n            } else {\r\n                for (var i = 0; i < 2; i++) {\r\n                    let discarded = opponent_player_hand.splice(\r\n                        Math.floor(Math.random() * opponent_player_hand.length),\r\n                        1\r\n                    )[0];\r\n                    graveyard.push(discarded);\r\n                }\r\n            }\r\n            break;\r\n        // draw 2\r\n        case \"5\":\r\n            console.log(\"reaching 5 case\");\r\n            current_player_hand.push(deck.pop());\r\n            current_player_hand.push(deck.pop());\r\n            break;\r\n        // clear all special cards\r\n        case \"6\":\r\n            console.log(\"reaching 6 case\");\r\n\r\n            // clear special fields\r\n            while (current_player_special_field.length > 0) {\r\n                graveyard.push(current_player_special_field.pop());\r\n            }\r\n            while (opponent_player_special_field.length > 0) {\r\n                graveyard.push(opponent_player_special_field.pop());\r\n            }\r\n\r\n            for (let id in jacks) {\r\n                let card = jacks[id][0];\r\n                let owner = jacks[id][1];\r\n                let jacklist = jacks[id][2];\r\n\r\n                // check the owner of each jack and see if they're in the correct field\r\n                if (owner !== current_player) {\r\n                    let idx = current_player_field.findIndex(\r\n                        (x) => card.id === x.id\r\n                    );\r\n                    if (idx !== -1) {\r\n                        let remove = current_player_field.splice(idx, 1)[0];\r\n                        opponent_player_field.push(remove);\r\n                    }\r\n                } else if (owner !== opponent_player) {\r\n                    let idx = opponent_player_field.findIndex(\r\n                        (x) => card.id === x.id\r\n                    );\r\n                    if (idx !== -1) {\r\n                        let remove = opponent_player_field.splice(idx, 1)[0];\r\n                        current_player_field.push(remove);\r\n                    }\r\n                }\r\n\r\n                //  add jacks to graveyard\r\n                while (jacklist.length > 0) {\r\n                    graveyard.push(jacklist.pop());\r\n                }\r\n                // clear key\r\n                delete jacks[card.id];\r\n            }\r\n            break;\r\n        case \"7\":\r\n            console.log(\"reaching this 7 case\");\r\n            let player_hand_length = current_player_hand.length -1;\r\n            while (current_player_hand.length > 0) {\r\n                deck.push(current_player_hand.pop());\r\n            }\r\n            shuffle(G.deck);\r\n            for(let j =0; j<= player_hand_length;j++ ){\r\n                current_player_hand.push(deck.pop());\r\n            }\r\n            break;\r\n\r\n        // fall through\r\n        case \"8\":\r\n        case \"Queen\":\r\n        case \"King\":\r\n            console.log(\"reaching 8||Q||K case\");\r\n            // remove from counter chain\r\n            let special = G.counterChain.splice(0, 1)[0];\r\n            current_player_special_field.push(special);\r\n            break;\r\n        default:\r\n            console.log(\"default case, something went wrong\");\r\n            break;\r\n    }\r\n}\r\n\r\n// this is basically accept but there's a target\r\nexport function chooseEffectTarget(G, ctx, targetCard, targetField) {\r\n    // don't have to check counter chain since that is checked at accept()\r\n\r\n    // do targeting effect\r\n    let valid = doEffectTarget(G, ctx, targetCard, targetField);\r\n    if (valid) {\r\n        ctx.events.endTurn();\r\n    }\r\n}\r\n\r\nfunction doEffectTarget(G, ctx, targetCard, targetField) {\r\n    let current_player = ctx.playOrder[ctx.playOrderPos];\r\n    let opponent_player =\r\n        ctx.playOrder[(ctx.playOrderPos + 1) % ctx.playOrder.length];\r\n    let current_player_field = G.fields[current_player];\r\n    let opponent_player_field = G.fields[opponent_player];\r\n    let opponent_player_special_field = G.specialFields[opponent_player];\r\n    let current_player_hand = G.hands[current_player];\r\n    // let opponent_player_hand = G.hands[opponent_player];\r\n    let jacks = G.jacks;\r\n    let graveyard = G.graveyard;\r\n    let deck = G.deck;\r\n\r\n    let card = G.counterChain[0];\r\n\r\n    // queens in opponent special field\r\n    let numQueensInOpponentSpecialField = opponent_player_special_field.filter(\r\n        (x) => x.Value === \"Queen\"\r\n    ).length;\r\n\r\n    switch (card.Value) {\r\n        // can only 2 special card\r\n        case \"2\":\r\n            console.log(\"reaching 2 case\");\r\n\r\n            // queen checks\r\n            if (\r\n                // must select queen in special field (if there is one)\r\n                numQueensInOpponentSpecialField > 0 &&\r\n                targetCard.Value !== \"Queen\"\r\n            ) {\r\n                console.log(\r\n                    \"queen is up, have to choose queen in opponent specialfield\"\r\n                );\r\n                return false;\r\n            }\r\n\r\n            // opponent special field\r\n            if (targetField === \"opponentSpecialField\") {\r\n                // 2 goes to graveyard (done in counter chain cleanup)\r\n                // targetCard goes to graveyard\r\n                let idx = opponent_player_special_field.findIndex(\r\n                    (i) => i.id === targetCard.id\r\n                );\r\n                let remove = opponent_player_special_field.splice(idx, 1)[0];\r\n                graveyard.push(remove);\r\n            }\r\n            // jacks, only in opponent field, since cant 2 own field\r\n            else if (targetField === \"opponentField\") {\r\n                if (!jacks[targetCard.id]) {\r\n                    console.log(\"did not select a jacked card\");\r\n                    return false;\r\n                }\r\n\r\n                // let owner = jacks[targetCard.id][1];\r\n                let jacklist = jacks[targetCard.id][2];\r\n\r\n                // find 1 jack and REMOVE\r\n                let idx_jack = jacklist.findIndex((i) => i.Value === \"Jack\");\r\n                let remove_jack = jacklist.splice(idx_jack, 1)[0];\r\n                graveyard.push(remove_jack);\r\n\r\n                // see 9 for explanation\r\n                if (jacklist.length === 0) {\r\n                    delete jacks[targetCard.id];\r\n                }\r\n\r\n                // remove from opponent and add to your side\r\n                let idx = opponent_player_field.findIndex(\r\n                    (i) => i.id === targetCard.id\r\n                );\r\n                let remove = opponent_player_field.splice(idx, 1)[0];\r\n                current_player_field.push(remove);\r\n            }\r\n\r\n            break;\r\n        // search graveyard\r\n        case \"3\":\r\n            console.log(\"reaching 3 case\");\r\n\r\n            let target_idx = G.graveyard.findIndex(\r\n                (i) => i.id === targetCard.id\r\n            );\r\n            // this was failing because i didn't do [0]\r\n            let found_card = G.graveyard.splice(target_idx, 1)[0];\r\n            current_player_hand.push(found_card);\r\n            break;\r\n        // pick 1 of top 2 cards\r\n        // case \"7\":\r\n        //     console.log(\"reaching 7 case\");\r\n        //     // retrieve top 2 cards\r\n        //     let one = G.deck.pop();\r\n        //     let two = G.deck.pop();\r\n\r\n        //     // check target\r\n        //     if (targetCard.id === one.id) {\r\n        //         current_player_hand.push(one);\r\n        //         G.deck.push(two);\r\n        //     } else {\r\n        //         current_player_hand.push(two);\r\n        //         G.deck.push(one);\r\n        //     }\r\n        //     break;\r\n        case \"9\":\r\n            console.log(\"reaching 9 case\", targetField);\r\n            // queen checks\r\n            if (\r\n                // must select queen in special field (if there is one)\r\n                numQueensInOpponentSpecialField > 0 &&\r\n                targetCard.Value !== \"Queen\"\r\n            ) {\r\n                console.log(\r\n                    \"queen is up, have to choose queen in opponent specialfield\"\r\n                );\r\n                return false;\r\n            }\r\n\r\n            // opponent special field\r\n            if (targetField === \"opponentSpecialField\") {\r\n                // 9 goes to graveyard (done in counter chain cleanup)\r\n                // targetCard goes to top of deck\r\n                let idx = opponent_player_special_field.findIndex(\r\n                    (i) => i.id === targetCard.id\r\n                );\r\n                let remove = opponent_player_special_field.splice(idx, 1)[0];\r\n                deck.push(remove);\r\n            }\r\n            // either opponent/player field\r\n            else if (\r\n                targetField === \"opponentField\" ||\r\n                targetField === \"playerField\"\r\n            ) {\r\n                // check if it was a jack\r\n                if (jacks[targetCard.id]) {\r\n                    /*  steps:\r\n                    1. 9 goes to graveyard and 1 jack goes to the top of deck\r\n                    2. if that card now has no jacks on it, change its owner to current player\r\n                    3. if the card is not on your field, add it your field. if it was already on your field, don't have to do anything\r\n                */\r\n                    // begin step 1\r\n                    // 9 already goes into graveyard from counter chain cleanup\r\n                    // the targetCard should just be the card with jacks on it\r\n                    console.log(\r\n                        \"sanity check for 9\",\r\n                        targetCard.id,\r\n                        jacks[targetCard.id][0].id\r\n                    );\r\n\r\n                    // let card = jacks[targetCard.id][0]; // this always stays the same\r\n                    // let owner = jacks[targetCard.id][1];\r\n                    let jacklist = jacks[targetCard.id][2];\r\n\r\n                    // find 1 jack and put on top of deck\r\n                    let idx_jack = jacklist.findIndex(\r\n                        (i) => i.Value === \"Jack\"\r\n                    );\r\n                    let remove_jack = jacklist.splice(idx_jack, 1)[0];\r\n                    deck.push(remove_jack);\r\n\r\n                    // step 2\r\n                    // this effectively changes the owner to the current player (if jacklist === 0), because the next time this card is jacked, its owner will be set in jacks{}\r\n                    // in other words, the card just becomes a plain old card as if it was never jacked\r\n                    if (jacklist.length === 0) {\r\n                        delete jacks[targetCard.id];\r\n                    }\r\n\r\n                    // step 3\r\n                    if (targetField === \"opponentField\") {\r\n                        // remove from opponent and add card to your side\r\n                        let idx = opponent_player_field.findIndex(\r\n                            (i) => i.id === targetCard.id\r\n                        );\r\n                        let remove = opponent_player_field.splice(idx, 1)[0];\r\n                        current_player_field.push(remove);\r\n                    }\r\n                    // don't need to do anything for playerField since card is already on player side\r\n                }\r\n                // not a jack, then just push to deck\r\n                else {\r\n                    if (targetField === \"opponentField\") {\r\n                        // remove from opponent\r\n                        let idx = opponent_player_field.findIndex(\r\n                            (i) => i.id === targetCard.id\r\n                        );\r\n                        let remove = opponent_player_field.splice(idx, 1)[0];\r\n                        deck.push(remove);\r\n                    } else {\r\n                        // there's no reason why you should be doing this\r\n                        // console.log(\"no reason to 9 your own card\");\r\n                        // remove from yourself\r\n                        let idx = current_player_field.findIndex(\r\n                            (i) => i.id === targetCard.id\r\n                        );\r\n                        let remove = current_player_field.splice(idx, 1)[0];\r\n                        deck.push(remove);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case \"Jack\":\r\n            console.log(\"reaching jack case\");\r\n\r\n            // remove from counter chain since it's going into jacks{}\r\n            let jack = G.counterChain.splice(0, 1)[0];\r\n\r\n            // first time\r\n            if (!jacks[targetCard.id]) {\r\n                // set key=card.id and value=[card object, \"owner\", [list of jacks]] (2 element list)\r\n                jacks[targetCard.id] = [targetCard, opponent_player, [jack]];\r\n            } else {\r\n                jacks[targetCard.id][2].push(jack);\r\n            }\r\n\r\n            // remove from opponent side and add to your side\r\n            let idx = opponent_player_field.findIndex(\r\n                (i) => i.id === targetCard.id\r\n            );\r\n            let remove = opponent_player_field.splice(idx, 1)[0];\r\n            current_player_field.push(remove);\r\n            break;\r\n        default:\r\n            console.log(\"default case, something went wrong\");\r\n            break;\r\n    }\r\n    return true;\r\n}\r\n\r\n// takes everything in counter chain and adds it to graveyard\r\n// so if you need anything from counter chain for an effect, it has to be extracted first\r\nexport function cleanupCounterChain(G) {\r\n    for (var i = 0; i < G.counterChain.length; i++) {\r\n        G.graveyard.push(G.counterChain[i]);\r\n    }\r\n    G.counterChain = [];\r\n\r\n    // reset effectCountered\r\n    G.effectCountered = false;\r\n}\r\n","import { initializeGame } from \"./Setup.js\";\r\nimport { drawCard, playCardValue } from \"./ActionMoves.js\";\r\nimport { playCardScuttle, chooseScuttleTarget } from \"./ScuttleMoves.js\";\r\nimport {\r\n    playCardEffect,\r\n    chooseEffectTarget,\r\n    counter,\r\n    accept,\r\n    cleanupCounterChain,\r\n} from \"./EffectMoves.js\";\r\nimport { isVictory, isDraw } from \"./Victory.js\";\r\nimport { GAME_NAME } from \"../../config\";\r\n\r\n\r\nconst setup = ({ playOrder, playOrderPos }) => {\r\n    const { deck, hands, fields, specialFields } = initializeGame(\r\n        playOrder,\r\n        playOrderPos\r\n    );\r\n\r\n    // initialize game state G\r\n    return {\r\n        deck: deck,\r\n        hands: hands,\r\n        fields: fields,\r\n        graveyard: [],\r\n        specialFields: specialFields,\r\n\r\n        // effect stuff\r\n        counterChain: [],\r\n        effectCountered: false,\r\n\r\n        // jacks stuff\r\n        // key=card object, value=[card obj (needed for 6), owner, list of jacks]\r\n        // i.e. jacks[4 of Hearts ID] = [card object, \"1\", [Jack of Hearts, Jack of Spades]]\r\n        jacks: {},\r\n    };\r\n};\r\n\r\nexport const Scuttle = {\r\n    name: `${GAME_NAME}`,\r\n    setup: setup,\r\n    turn: {\r\n        onBegin: (G, ctx) => {\r\n            ctx.events.setActivePlayers({\r\n                currentPlayer: \"action\",\r\n                others: \"idle\",\r\n            });\r\n        },\r\n        onEnd: (G, ctx) => {\r\n            cleanupCounterChain(G);\r\n        },\r\n        stages: {\r\n            idle: {\r\n                moves: {},\r\n            },\r\n            action: {\r\n                moves: {\r\n                    drawCard,\r\n                    endTurn,\r\n                    playCardValue,\r\n                    playCardScuttle,\r\n                    playCardEffect,\r\n                },\r\n            },\r\n            countering: {\r\n                moves: {\r\n                    accept,\r\n                    counter,\r\n                },\r\n            },\r\n            choosingScuttle: {\r\n                moves: {\r\n                    chooseScuttleTarget,\r\n                },\r\n            },\r\n            choosingEffect: {\r\n                moves: {\r\n                    chooseEffectTarget,\r\n                },\r\n            },\r\n        },\r\n    },\r\n\r\n    // victory condition\r\n    endIf: (G, ctx) => {\r\n        if (isVictory(G, ctx)) {\r\n            return { winner: ctx.currentPlayer };\r\n        }\r\n        if (isDraw(G, ctx)) {\r\n            return { draw: true };\r\n        }\r\n    },\r\n    onEnd: (G, ctx) => {\r\n        ctx.events.setActivePlayers({\r\n            value: {\r\n                0: \"idle\",\r\n                1: \"idle\",\r\n            },\r\n        });\r\n    },\r\n};\r\n\r\n// game moves\r\nfunction endTurn(G, ctx) {\r\n    ctx.events.endTurn();\r\n}\r\n","// action stage moves\r\n// import { INVALID_MOVE } from \"boardgame.io/core\";\r\n\r\nexport function drawCard(G, ctx) {\r\n    const card = G.deck.pop();\r\n    G.hands[ctx.currentPlayer].push(card);\r\n    ctx.events.endTurn();\r\n}\r\n\r\nexport function playCardValue(G, ctx, card) {\r\n    let hand = G.hands[ctx.currentPlayer];\r\n    let field = G.fields[ctx.currentPlayer];\r\n\r\n    let idx = hand.findIndex((i) => i.id === card.id);\r\n    let remove = hand.splice(idx, 1)[0];\r\n    field.push(remove);\r\n    ctx.events.endTurn();\r\n}","// import { INVALID_MOVE } from \"boardgame.io/core\";\r\nexport function playCardScuttle(G, ctx) {\r\n    ctx.events.setActivePlayers({\r\n        currentPlayer: \"choosingScuttle\",\r\n        others: \"idle\",\r\n    });\r\n}\r\n\r\nexport function chooseScuttleTarget(G, ctx, card, target) {\r\n    let current_player = ctx.playOrder[ctx.playOrderPos];\r\n    let opponent_player =\r\n        ctx.playOrder[(ctx.playOrderPos + 1) % ctx.playOrder.length];\r\n\r\n    let current_hand = G.hands[current_player];\r\n    let opponent_field = G.fields[opponent_player];\r\n\r\n    let current_card = current_hand.find((i) => i.id === card.id);\r\n    let target_card = opponent_field.find((i) => i.id === target.id);\r\n\r\n    // card logic\r\n    let curr =\r\n        current_card.Value === \"Ace\" ? \"1\" : parseInt(current_card.Value);\r\n    let targ = target_card.Value === \"Ace\" ? \"1\" : parseInt(target_card.Value);\r\n\r\n    if (parseInt(curr) >= parseInt(targ)) {\r\n        let i = current_hand.findIndex((x) => x.id === card.id);\r\n        let remove1 = current_hand.splice(i, 1)[0];\r\n        let j = opponent_field.findIndex((y) => y.id === target.id);\r\n        let remove2 = opponent_field.splice(j, 1)[0];\r\n\r\n        // remove jack\r\n        let jacks = G.jacks;\r\n        if (jacks[target.id]) {\r\n            let card = jacks[target.id][0];\r\n            // let owner = jacks[target.id][1];\r\n            let jacklist = jacks[target.id][2];\r\n            //  add jacks to graveyard\r\n            while (jacklist.length > 0) {\r\n                G.graveyard.push(jacklist.pop());\r\n            }\r\n            // clear key\r\n            delete jacks[card.id];\r\n        }\r\n\r\n        G.graveyard.push(remove1);\r\n        G.graveyard.push(remove2);\r\n        ctx.events.endTurn();\r\n    } else {\r\n        console.log(\"playCardScuttle error, scuttle failed\");\r\n        // reset stages\r\n        ctx.events.setActivePlayers({\r\n            currentPlayer: \"action\",\r\n            others: \"idle\",\r\n        });\r\n        // return INVALID_MOVE;\r\n    }\r\n}\r\n","export function isVictory(G, ctx) {\r\n    let player = ctx.currentPlayer;\r\n    let field = G.fields[player];\r\n    let specialField = G.specialFields[player];\r\n    let points = field.map((x) => x.Point).reduce((a, b) => a + b, 0);\r\n    let numKings = specialField.filter((x) => x.Value === \"King\").length;\r\n\r\n    return points >= 21 - 7 * numKings;\r\n}\r\n\r\nexport function isDraw(G, ctx) {\r\n    let player = ctx.playOrder[ctx.playOrderPos];\r\n    let opponent = ctx.playOrder[(ctx.playOrderPos + 1) % ctx.playOrder.length];\r\n    let hand = G.hands[player];\r\n    let opponentHand = G.hands[opponent];\r\n    let deck = G.deck;\r\n\r\n    // console.log(\r\n    //     String(deck.length === 0),\r\n    //     String(hand.every((i) => i.Value === \"Jack\")),\r\n    //     String(hand.length === 0),\r\n    //     String(opponentHand.every((i) => i.Value === \"Jack\")),\r\n    //     String(opponentHand.length === 0)\r\n    // );\r\n\r\n    return (\r\n        deck.length === 0 &&\r\n        (hand.every((i) => i.Value === \"Jack\") || hand.length === 0) &&\r\n        opponentHand.every(\r\n            (i) => i.Value === \"Jack\" || opponentHand.length === 0\r\n        )\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Client } from \"boardgame.io/react\";\r\nimport { SocketIO } from \"boardgame.io/multiplayer\";\r\nimport { DEFAULT_PORT, APP_PRODUCTION } from \"../config\";\r\nimport { Scuttle, Board } from \"../code\";\r\nimport Lobby from \"../pages/Lobby\";\r\nimport { LobbyAPI } from \"../LobbyAPI\";\r\n\r\nimport { Button, Row, Col } from \"react-bootstrap\";\r\n\r\nconst api = new LobbyAPI();\r\n\r\nconst { origin, protocol, hostname } = window.location;\r\nconst SERVER_URL = APP_PRODUCTION\r\n    ? origin\r\n    : `${protocol}//${hostname}:${DEFAULT_PORT}`;\r\n\r\nconst GameClient = Client({\r\n    game: Scuttle,\r\n    board: Board,\r\n    debug: true,\r\n    multiplayer: SocketIO({ server: SERVER_URL }),\r\n});\r\n\r\nconst Room = (props) => {\r\n    const { history } = props;\r\n    const { id } = useParams();\r\n    // const [copied, setCopied] = useState(false);\r\n    const [players, setPlayers] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n\r\n    // check for newly joined players by comparing against the two players array (front-end and the api, and api is always slightly ahead)\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            api.getPlayers(id).then(\r\n                (players) => {\r\n                    setPlayers(players);\r\n                    const currPlayers = players.filter((player) => player.name); // only current players have a name field\r\n                    if (currPlayers.length === players.length) {\r\n                        setShow(true); // everyone has joined, show them the board\r\n                    }\r\n                },\r\n                () => {\r\n                    history.push(\"\", { invalidRoom: true }); // failed to join because room doesn't exist -> return user to homepage\r\n                }\r\n            );\r\n        }, 500);\r\n        if (show) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [show, players.length, id, history]);\r\n\r\n    const copyToClipboard = (e) => {\r\n        const textArea = document.getElementById(\"roomID\");\r\n        textArea.select();\r\n        document.execCommand(\"copy\");\r\n        e.target.focus();\r\n    };\r\n\r\n    const leaveRoom = () => {\r\n        api.leaveRoom(\r\n            id,\r\n            localStorage.getItem(\"id\"),\r\n            localStorage.getItem(\"credentials\")\r\n        ).then(() => {\r\n            history.push(\"/\");\r\n        });\r\n    };\r\n\r\n    if (show) {\r\n        return (\r\n            <GameClient\r\n                gameID={id}\r\n                // numPlayers={players.length}\r\n                playerID={localStorage.getItem(\"id\")}\r\n                credentials={localStorage.getItem(\"credentials\")}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <Lobby>\r\n                <Row>\r\n                    <Col className=\"border\">\r\n                        <h6>Room ID:</h6>\r\n                        <span>\r\n                            <input id=\"roomID\" value={id} readOnly />{\" \"}\r\n                            <Button\r\n                                size=\"sm\"\r\n                                variant=\"outline-secondary\"\r\n                                onClick={copyToClipboard}\r\n                            >\r\n                                Copy\r\n                            </Button>\r\n                        </span>\r\n                    </Col>\r\n                    <Col className=\"border\">\r\n                        <h6>Players</h6>\r\n                        <div>\r\n                            {players.map((player) => {\r\n                                if (player.name) {\r\n                                    return player.name;\r\n                                } else {\r\n                                    return \"\\n\";\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <h6>Game will begin once all players have joined.</h6>\r\n                <Button size=\"sm\" variant=\"danger\" onClick={leaveRoom}>\r\n                    Leave Room\r\n                </Button>\r\n            </Lobby>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Room;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { Home, Room } from \"./pages\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.scss\";\r\n\r\n// // TO TEST LOCALLY:, uncomment the multiplayer app and use this one\r\n// // local testing\r\n// import { Client } from \"boardgame.io/react\";\r\n// import { Local } from \"boardgame.io/multiplayer\";\r\n// import { Scuttle } from \"../src/code/game/Game\";\r\n// import { Board } from \"../src/code/board/Board\";\r\n// const GameClient = Client({\r\n//     game: Scuttle,\r\n//     board: Board,\r\n//     multiplayer: Local(),\r\n// });\r\n// const App = () => (\r\n//     <div>\r\n//         <GameClient playerID=\"0\" />\r\n//         <GameClient playerID=\"1\" />\r\n//     </div>\r\n// );\r\n\r\nconst App = () => {\r\n    const history = useHistory(); // remember the history of user navigation\r\n\r\n    // defining the routing: (so far) homepage, lobby/room page. else redirect to home page for simplicity\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Home history={history} />\r\n            </Route>\r\n            <Route exact path=\"/rooms/:id\">\r\n                <Room history={history} />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}